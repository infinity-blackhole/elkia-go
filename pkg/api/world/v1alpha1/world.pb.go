// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.12
// source: pkg/api/world/v1alpha1/world.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CharacterClass int32

const (
	CharacterClass_ADVENTURER     CharacterClass = 0
	CharacterClass_SORCERER       CharacterClass = 1
	CharacterClass_ARCHER         CharacterClass = 2
	CharacterClass_SWORDMAN       CharacterClass = 3
	CharacterClass_MARTIAL_ARTIST CharacterClass = 4
)

// Enum value maps for CharacterClass.
var (
	CharacterClass_name = map[int32]string{
		0: "ADVENTURER",
		1: "SORCERER",
		2: "ARCHER",
		3: "SWORDMAN",
		4: "MARTIAL_ARTIST",
	}
	CharacterClass_value = map[string]int32{
		"ADVENTURER":     0,
		"SORCERER":       1,
		"ARCHER":         2,
		"SWORDMAN":       3,
		"MARTIAL_ARTIST": 4,
	}
)

func (x CharacterClass) Enum() *CharacterClass {
	p := new(CharacterClass)
	*p = x
	return p
}

func (x CharacterClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterClass) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_world_v1alpha1_world_proto_enumTypes[0].Descriptor()
}

func (CharacterClass) Type() protoreflect.EnumType {
	return &file_pkg_api_world_v1alpha1_world_proto_enumTypes[0]
}

func (x CharacterClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterClass.Descriptor instead.
func (CharacterClass) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{0}
}

type Sex int32

const (
	Sex_Male   Sex = 0
	Sex_Female Sex = 1
)

// Enum value maps for Sex.
var (
	Sex_name = map[int32]string{
		0: "Male",
		1: "Female",
	}
	Sex_value = map[string]int32{
		"Male":   0,
		"Female": 1,
	}
)

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}

func (x Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_world_v1alpha1_world_proto_enumTypes[1].Descriptor()
}

func (Sex) Type() protoreflect.EnumType {
	return &file_pkg_api_world_v1alpha1_world_proto_enumTypes[1]
}

func (x Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sex.Descriptor instead.
func (Sex) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{1}
}

type CharacterHairColor int32

const (
	CharacterHairColor_MauveTaupe CharacterHairColor = 0
	CharacterHairColor_Cerise     CharacterHairColor = 1
	CharacterHairColor_SanMarino  CharacterHairColor = 2
	CharacterHairColor_Affair     CharacterHairColor = 3
	CharacterHairColor_Dixie      CharacterHairColor = 4
	CharacterHairColor_Raven      CharacterHairColor = 5
	CharacterHairColor_Killarney  CharacterHairColor = 6
	CharacterHairColor_Nutmeg     CharacterHairColor = 7
	CharacterHairColor_Saddle     CharacterHairColor = 8
	CharacterHairColor_Red        CharacterHairColor = 9
)

// Enum value maps for CharacterHairColor.
var (
	CharacterHairColor_name = map[int32]string{
		0: "MauveTaupe",
		1: "Cerise",
		2: "SanMarino",
		3: "Affair",
		4: "Dixie",
		5: "Raven",
		6: "Killarney",
		7: "Nutmeg",
		8: "Saddle",
		9: "Red",
	}
	CharacterHairColor_value = map[string]int32{
		"MauveTaupe": 0,
		"Cerise":     1,
		"SanMarino":  2,
		"Affair":     3,
		"Dixie":      4,
		"Raven":      5,
		"Killarney":  6,
		"Nutmeg":     7,
		"Saddle":     8,
		"Red":        9,
	}
)

func (x CharacterHairColor) Enum() *CharacterHairColor {
	p := new(CharacterHairColor)
	*p = x
	return p
}

func (x CharacterHairColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterHairColor) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_world_v1alpha1_world_proto_enumTypes[2].Descriptor()
}

func (CharacterHairColor) Type() protoreflect.EnumType {
	return &file_pkg_api_world_v1alpha1_world_proto_enumTypes[2]
}

func (x CharacterHairColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterHairColor.Descriptor instead.
func (CharacterHairColor) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{2}
}

type CharacterHairStyle int32

const (
	CharacterHairStyle_StyleA CharacterHairStyle = 0
	CharacterHairStyle_StyleB CharacterHairStyle = 1
	CharacterHairStyle_StyleC CharacterHairStyle = 2
	CharacterHairStyle_StyleD CharacterHairStyle = 3
	CharacterHairStyle_Shaved CharacterHairStyle = 4
)

// Enum value maps for CharacterHairStyle.
var (
	CharacterHairStyle_name = map[int32]string{
		0: "StyleA",
		1: "StyleB",
		2: "StyleC",
		3: "StyleD",
		4: "Shaved",
	}
	CharacterHairStyle_value = map[string]int32{
		"StyleA": 0,
		"StyleB": 1,
		"StyleC": 2,
		"StyleD": 3,
		"Shaved": 4,
	}
)

func (x CharacterHairStyle) Enum() *CharacterHairStyle {
	p := new(CharacterHairStyle)
	*p = x
	return p
}

func (x CharacterHairStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterHairStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_world_v1alpha1_world_proto_enumTypes[3].Descriptor()
}

func (CharacterHairStyle) Type() protoreflect.EnumType {
	return &file_pkg_api_world_v1alpha1_world_proto_enumTypes[3]
}

func (x CharacterHairStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterHairStyle.Descriptor instead.
func (CharacterHairStyle) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{3}
}

type Faction int32

const (
	Faction_Neutral Faction = 0
	Faction_Angel   Faction = 1
	Faction_Demon   Faction = 2
)

// Enum value maps for Faction.
var (
	Faction_name = map[int32]string{
		0: "Neutral",
		1: "Angel",
		2: "Demon",
	}
	Faction_value = map[string]int32{
		"Neutral": 0,
		"Angel":   1,
		"Demon":   2,
	}
)

func (x Faction) Enum() *Faction {
	p := new(Faction)
	*p = x
	return p
}

func (x Faction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Faction) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_world_v1alpha1_world_proto_enumTypes[4].Descriptor()
}

func (Faction) Type() protoreflect.EnumType {
	return &file_pkg_api_world_v1alpha1_world_proto_enumTypes[4]
}

func (x Faction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Faction.Descriptor instead.
func (Faction) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{4}
}

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Class          CharacterClass     `protobuf:"varint,2,opt,name=class,proto3,enum=io.elkia.world.v1alpha1.CharacterClass" json:"class,omitempty"`
	Sex            Sex                `protobuf:"varint,3,opt,name=sex,proto3,enum=io.elkia.world.v1alpha1.Sex" json:"sex,omitempty"`
	HairColor      CharacterHairColor `protobuf:"varint,4,opt,name=hair_color,json=hairColor,proto3,enum=io.elkia.world.v1alpha1.CharacterHairColor" json:"hair_color,omitempty"`
	HairStyle      CharacterHairStyle `protobuf:"varint,5,opt,name=hair_style,json=hairStyle,proto3,enum=io.elkia.world.v1alpha1.CharacterHairStyle" json:"hair_style,omitempty"`
	Faction        Faction            `protobuf:"varint,6,opt,name=faction,proto3,enum=io.elkia.world.v1alpha1.Faction" json:"faction,omitempty"`
	Reputation     int32              `protobuf:"varint,7,opt,name=reputation,proto3" json:"reputation,omitempty"`
	Dignity        int32              `protobuf:"varint,8,opt,name=dignity,proto3" json:"dignity,omitempty"`
	Compliment     int32              `protobuf:"varint,9,opt,name=compliment,proto3" json:"compliment,omitempty"`
	Health         int32              `protobuf:"varint,10,opt,name=health,proto3" json:"health,omitempty"`
	Mana           int32              `protobuf:"varint,11,opt,name=mana,proto3" json:"mana,omitempty"`
	Name           string             `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	HeroExperience int32              `protobuf:"varint,13,opt,name=hero_experience,json=heroExperience,proto3" json:"hero_experience,omitempty"`
	HeroLevel      int32              `protobuf:"varint,14,opt,name=hero_level,json=heroLevel,proto3" json:"hero_level,omitempty"`
	JobExperience  int32              `protobuf:"varint,15,opt,name=job_experience,json=jobExperience,proto3" json:"job_experience,omitempty"`
	JobLevel       int32              `protobuf:"varint,16,opt,name=job_level,json=jobLevel,proto3" json:"job_level,omitempty"`
	Experience     int32              `protobuf:"varint,17,opt,name=experience,proto3" json:"experience,omitempty"`
	Level          int32              `protobuf:"varint,18,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{0}
}

func (x *Character) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Character) GetClass() CharacterClass {
	if x != nil {
		return x.Class
	}
	return CharacterClass_ADVENTURER
}

func (x *Character) GetSex() Sex {
	if x != nil {
		return x.Sex
	}
	return Sex_Male
}

func (x *Character) GetHairColor() CharacterHairColor {
	if x != nil {
		return x.HairColor
	}
	return CharacterHairColor_MauveTaupe
}

func (x *Character) GetHairStyle() CharacterHairStyle {
	if x != nil {
		return x.HairStyle
	}
	return CharacterHairStyle_StyleA
}

func (x *Character) GetFaction() Faction {
	if x != nil {
		return x.Faction
	}
	return Faction_Neutral
}

func (x *Character) GetReputation() int32 {
	if x != nil {
		return x.Reputation
	}
	return 0
}

func (x *Character) GetDignity() int32 {
	if x != nil {
		return x.Dignity
	}
	return 0
}

func (x *Character) GetCompliment() int32 {
	if x != nil {
		return x.Compliment
	}
	return 0
}

func (x *Character) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Character) GetMana() int32 {
	if x != nil {
		return x.Mana
	}
	return 0
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetHeroExperience() int32 {
	if x != nil {
		return x.HeroExperience
	}
	return 0
}

func (x *Character) GetHeroLevel() int32 {
	if x != nil {
		return x.HeroLevel
	}
	return 0
}

func (x *Character) GetJobExperience() int32 {
	if x != nil {
		return x.JobExperience
	}
	return 0
}

func (x *Character) GetJobLevel() int32 {
	if x != nil {
		return x.JobLevel
	}
	return 0
}

func (x *Character) GetExperience() int32 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *Character) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type CharacterAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Class     CharacterClass     `protobuf:"varint,3,opt,name=class,proto3,enum=io.elkia.world.v1alpha1.CharacterClass" json:"class,omitempty"`
	Sex       Sex                `protobuf:"varint,4,opt,name=sex,proto3,enum=io.elkia.world.v1alpha1.Sex" json:"sex,omitempty"`
	HairColor CharacterHairColor `protobuf:"varint,5,opt,name=hair_color,json=hairColor,proto3,enum=io.elkia.world.v1alpha1.CharacterHairColor" json:"hair_color,omitempty"`
	HairStyle CharacterHairStyle `protobuf:"varint,6,opt,name=hair_style,json=hairStyle,proto3,enum=io.elkia.world.v1alpha1.CharacterHairStyle" json:"hair_style,omitempty"`
}

func (x *CharacterAddRequest) Reset() {
	*x = CharacterAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterAddRequest) ProtoMessage() {}

func (x *CharacterAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterAddRequest.ProtoReflect.Descriptor instead.
func (*CharacterAddRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{1}
}

func (x *CharacterAddRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacterAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterAddRequest) GetClass() CharacterClass {
	if x != nil {
		return x.Class
	}
	return CharacterClass_ADVENTURER
}

func (x *CharacterAddRequest) GetSex() Sex {
	if x != nil {
		return x.Sex
	}
	return Sex_Male
}

func (x *CharacterAddRequest) GetHairColor() CharacterHairColor {
	if x != nil {
		return x.HairColor
	}
	return CharacterHairColor_MauveTaupe
}

func (x *CharacterAddRequest) GetHairStyle() CharacterHairStyle {
	if x != nil {
		return x.HairStyle
	}
	return CharacterHairStyle_StyleA
}

type CharacterAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CharacterAddResponse) Reset() {
	*x = CharacterAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterAddResponse) ProtoMessage() {}

func (x *CharacterAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterAddResponse.ProtoReflect.Descriptor instead.
func (*CharacterAddResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{2}
}

type CharacterRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CharacterRemoveRequest) Reset() {
	*x = CharacterRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterRemoveRequest) ProtoMessage() {}

func (x *CharacterRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterRemoveRequest.ProtoReflect.Descriptor instead.
func (*CharacterRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{3}
}

func (x *CharacterRemoveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CharacterRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CharacterRemoveResponse) Reset() {
	*x = CharacterRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterRemoveResponse) ProtoMessage() {}

func (x *CharacterRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterRemoveResponse.ProtoReflect.Descriptor instead.
func (*CharacterRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{4}
}

type CharacterUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorldId    *uint32 `protobuf:"varint,2,opt,name=world_id,json=worldId,proto3,oneof" json:"world_id,omitempty"`
	ChannelId  *uint32 `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3,oneof" json:"channel_id,omitempty"`
	Name       *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Address    *string `protobuf:"bytes,5,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Population *uint32 `protobuf:"varint,6,opt,name=population,proto3,oneof" json:"population,omitempty"`
	Capacity   *uint32 `protobuf:"varint,7,opt,name=capacity,proto3,oneof" json:"capacity,omitempty"`
}

func (x *CharacterUpdateRequest) Reset() {
	*x = CharacterUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterUpdateRequest) ProtoMessage() {}

func (x *CharacterUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterUpdateRequest.ProtoReflect.Descriptor instead.
func (*CharacterUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{5}
}

func (x *CharacterUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacterUpdateRequest) GetWorldId() uint32 {
	if x != nil && x.WorldId != nil {
		return *x.WorldId
	}
	return 0
}

func (x *CharacterUpdateRequest) GetChannelId() uint32 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *CharacterUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CharacterUpdateRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *CharacterUpdateRequest) GetPopulation() uint32 {
	if x != nil && x.Population != nil {
		return *x.Population
	}
	return 0
}

func (x *CharacterUpdateRequest) GetCapacity() uint32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

type CharacterUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CharacterUpdateResponse) Reset() {
	*x = CharacterUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterUpdateResponse) ProtoMessage() {}

func (x *CharacterUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterUpdateResponse.ProtoReflect.Descriptor instead.
func (*CharacterUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{6}
}

type CharacterListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *CharacterListRequest) Reset() {
	*x = CharacterListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterListRequest) ProtoMessage() {}

func (x *CharacterListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterListRequest.ProtoReflect.Descriptor instead.
func (*CharacterListRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{7}
}

func (x *CharacterListRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type CharacterListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters []*Character `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *CharacterListResponse) Reset() {
	*x = CharacterListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterListResponse) ProtoMessage() {}

func (x *CharacterListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_world_v1alpha1_world_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterListResponse.ProtoReflect.Descriptor instead.
func (*CharacterListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP(), []int{8}
}

func (x *CharacterListResponse) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

var File_pkg_api_world_v1alpha1_world_proto protoreflect.FileDescriptor

var file_pkg_api_world_v1alpha1_world_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0xba, 0x05,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x2e,
	0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b,
	0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x65, 0x78, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x4a, 0x0a, 0x0a, 0x68, 0x61,
	0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x48, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x68, 0x61, 0x69,
	0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x0a, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e,
	0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x61,
	0x69, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x09, 0x68, 0x61, 0x69, 0x72, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x67, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x69, 0x67, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6e, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6d, 0x61, 0x6e, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x65, 0x72, 0x6f,
	0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x68, 0x65, 0x72, 0x6f, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xc0, 0x02, 0x0a, 0x13, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x78,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x4a, 0x0a, 0x0a, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x65,
	0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x61, 0x69,
	0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x68, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x4a, 0x0a, 0x0a, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x61, 0x69, 0x72, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x52, 0x09, 0x68, 0x61, 0x69, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x16, 0x0a,
	0x14, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x16, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x37, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x2a, 0x5c, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x44, 0x56, 0x45, 0x4e,
	0x54, 0x55, 0x52, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4f, 0x52, 0x43, 0x45,
	0x52, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x52, 0x43, 0x48, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x4d, 0x41, 0x4e, 0x10, 0x03, 0x12,
	0x12, 0x0a, 0x0e, 0x4d, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x53,
	0x54, 0x10, 0x04, 0x2a, 0x1b, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x61,
	0x6c, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x01,
	0x2a, 0x91, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x61,
	0x69, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x61, 0x75, 0x76, 0x65,
	0x54, 0x61, 0x75, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x65, 0x72, 0x69, 0x73,
	0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x61, 0x6e, 0x4d, 0x61, 0x72, 0x69, 0x6e, 0x6f,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x69, 0x78, 0x69, 0x65, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x61, 0x76,
	0x65, 0x6e, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x6e, 0x65,
	0x79, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x10, 0x07, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x52,
	0x65, 0x64, 0x10, 0x09, 0x2a, 0x50, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x48, 0x61, 0x69, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x41, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x43, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x68,
	0x61, 0x76, 0x65, 0x64, 0x10, 0x04, 0x2a, 0x2c, 0x0a, 0x07, 0x46, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x10, 0x02, 0x32, 0xd0, 0x03, 0x0a, 0x05, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x6b,
	0x0a, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x2c,
	0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69,
	0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x0f, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x2f,
	0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x74, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c,
	0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b,
	0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x18, 0x5a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_world_v1alpha1_world_proto_rawDescOnce sync.Once
	file_pkg_api_world_v1alpha1_world_proto_rawDescData = file_pkg_api_world_v1alpha1_world_proto_rawDesc
)

func file_pkg_api_world_v1alpha1_world_proto_rawDescGZIP() []byte {
	file_pkg_api_world_v1alpha1_world_proto_rawDescOnce.Do(func() {
		file_pkg_api_world_v1alpha1_world_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_world_v1alpha1_world_proto_rawDescData)
	})
	return file_pkg_api_world_v1alpha1_world_proto_rawDescData
}

var file_pkg_api_world_v1alpha1_world_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pkg_api_world_v1alpha1_world_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_api_world_v1alpha1_world_proto_goTypes = []interface{}{
	(CharacterClass)(0),             // 0: io.elkia.world.v1alpha1.CharacterClass
	(Sex)(0),                        // 1: io.elkia.world.v1alpha1.Sex
	(CharacterHairColor)(0),         // 2: io.elkia.world.v1alpha1.CharacterHairColor
	(CharacterHairStyle)(0),         // 3: io.elkia.world.v1alpha1.CharacterHairStyle
	(Faction)(0),                    // 4: io.elkia.world.v1alpha1.Faction
	(*Character)(nil),               // 5: io.elkia.world.v1alpha1.Character
	(*CharacterAddRequest)(nil),     // 6: io.elkia.world.v1alpha1.CharacterAddRequest
	(*CharacterAddResponse)(nil),    // 7: io.elkia.world.v1alpha1.CharacterAddResponse
	(*CharacterRemoveRequest)(nil),  // 8: io.elkia.world.v1alpha1.CharacterRemoveRequest
	(*CharacterRemoveResponse)(nil), // 9: io.elkia.world.v1alpha1.CharacterRemoveResponse
	(*CharacterUpdateRequest)(nil),  // 10: io.elkia.world.v1alpha1.CharacterUpdateRequest
	(*CharacterUpdateResponse)(nil), // 11: io.elkia.world.v1alpha1.CharacterUpdateResponse
	(*CharacterListRequest)(nil),    // 12: io.elkia.world.v1alpha1.CharacterListRequest
	(*CharacterListResponse)(nil),   // 13: io.elkia.world.v1alpha1.CharacterListResponse
}
var file_pkg_api_world_v1alpha1_world_proto_depIdxs = []int32{
	0,  // 0: io.elkia.world.v1alpha1.Character.class:type_name -> io.elkia.world.v1alpha1.CharacterClass
	1,  // 1: io.elkia.world.v1alpha1.Character.sex:type_name -> io.elkia.world.v1alpha1.Sex
	2,  // 2: io.elkia.world.v1alpha1.Character.hair_color:type_name -> io.elkia.world.v1alpha1.CharacterHairColor
	3,  // 3: io.elkia.world.v1alpha1.Character.hair_style:type_name -> io.elkia.world.v1alpha1.CharacterHairStyle
	4,  // 4: io.elkia.world.v1alpha1.Character.faction:type_name -> io.elkia.world.v1alpha1.Faction
	0,  // 5: io.elkia.world.v1alpha1.CharacterAddRequest.class:type_name -> io.elkia.world.v1alpha1.CharacterClass
	1,  // 6: io.elkia.world.v1alpha1.CharacterAddRequest.sex:type_name -> io.elkia.world.v1alpha1.Sex
	2,  // 7: io.elkia.world.v1alpha1.CharacterAddRequest.hair_color:type_name -> io.elkia.world.v1alpha1.CharacterHairColor
	3,  // 8: io.elkia.world.v1alpha1.CharacterAddRequest.hair_style:type_name -> io.elkia.world.v1alpha1.CharacterHairStyle
	5,  // 9: io.elkia.world.v1alpha1.CharacterListResponse.characters:type_name -> io.elkia.world.v1alpha1.Character
	6,  // 10: io.elkia.world.v1alpha1.Lobby.CharacterAdd:input_type -> io.elkia.world.v1alpha1.CharacterAddRequest
	8,  // 11: io.elkia.world.v1alpha1.Lobby.CharacterRemove:input_type -> io.elkia.world.v1alpha1.CharacterRemoveRequest
	10, // 12: io.elkia.world.v1alpha1.Lobby.CharacterUpdate:input_type -> io.elkia.world.v1alpha1.CharacterUpdateRequest
	12, // 13: io.elkia.world.v1alpha1.Lobby.CharacterList:input_type -> io.elkia.world.v1alpha1.CharacterListRequest
	7,  // 14: io.elkia.world.v1alpha1.Lobby.CharacterAdd:output_type -> io.elkia.world.v1alpha1.CharacterAddResponse
	9,  // 15: io.elkia.world.v1alpha1.Lobby.CharacterRemove:output_type -> io.elkia.world.v1alpha1.CharacterRemoveResponse
	11, // 16: io.elkia.world.v1alpha1.Lobby.CharacterUpdate:output_type -> io.elkia.world.v1alpha1.CharacterUpdateResponse
	13, // 17: io.elkia.world.v1alpha1.Lobby.CharacterList:output_type -> io.elkia.world.v1alpha1.CharacterListResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pkg_api_world_v1alpha1_world_proto_init() }
func file_pkg_api_world_v1alpha1_world_proto_init() {
	if File_pkg_api_world_v1alpha1_world_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_world_v1alpha1_world_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_api_world_v1alpha1_world_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_world_v1alpha1_world_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_world_v1alpha1_world_proto_goTypes,
		DependencyIndexes: file_pkg_api_world_v1alpha1_world_proto_depIdxs,
		EnumInfos:         file_pkg_api_world_v1alpha1_world_proto_enumTypes,
		MessageInfos:      file_pkg_api_world_v1alpha1_world_proto_msgTypes,
	}.Build()
	File_pkg_api_world_v1alpha1_world_proto = out.File
	file_pkg_api_world_v1alpha1_world_proto_rawDesc = nil
	file_pkg_api_world_v1alpha1_world_proto_goTypes = nil
	file_pkg_api_world_v1alpha1_world_proto_depIdxs = nil
}
