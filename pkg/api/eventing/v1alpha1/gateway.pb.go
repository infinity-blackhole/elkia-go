// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.12
// source: pkg/api/eventing/v1alpha1/gateway.proto

package v1alpha1

import (
	v1alpha1 "go.shikanime.studio/elkia/pkg/api/fleet/v1alpha1"
	v1alpha11 "go.shikanime.studio/elkia/pkg/api/world/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GatewayCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Command:
	//
	//	*GatewayCommand_Presence
	//	*GatewayCommand_Client
	//	*GatewayCommand_Lobby
	//	*GatewayCommand_Combat
	Command isGatewayCommand_Command `protobuf_oneof:"command"`
}

func (x *GatewayCommand) Reset() {
	*x = GatewayCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayCommand) ProtoMessage() {}

func (x *GatewayCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayCommand.ProtoReflect.Descriptor instead.
func (*GatewayCommand) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescGZIP(), []int{0}
}

func (m *GatewayCommand) GetCommand() isGatewayCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *GatewayCommand) GetPresence() *v1alpha1.PresenceCommand {
	if x, ok := x.GetCommand().(*GatewayCommand_Presence); ok {
		return x.Presence
	}
	return nil
}

func (x *GatewayCommand) GetClient() *ClientCommand {
	if x, ok := x.GetCommand().(*GatewayCommand_Client); ok {
		return x.Client
	}
	return nil
}

func (x *GatewayCommand) GetLobby() *v1alpha11.LobbyCommand {
	if x, ok := x.GetCommand().(*GatewayCommand_Lobby); ok {
		return x.Lobby
	}
	return nil
}

func (x *GatewayCommand) GetCombat() *v1alpha11.CombatCommand {
	if x, ok := x.GetCommand().(*GatewayCommand_Combat); ok {
		return x.Combat
	}
	return nil
}

type isGatewayCommand_Command interface {
	isGatewayCommand_Command()
}

type GatewayCommand_Presence struct {
	Presence *v1alpha1.PresenceCommand `protobuf:"bytes,1,opt,name=presence,proto3,oneof"`
}

type GatewayCommand_Client struct {
	Client *ClientCommand `protobuf:"bytes,2,opt,name=client,proto3,oneof"`
}

type GatewayCommand_Lobby struct {
	Lobby *v1alpha11.LobbyCommand `protobuf:"bytes,3,opt,name=lobby,proto3,oneof"`
}

type GatewayCommand_Combat struct {
	Combat *v1alpha11.CombatCommand `protobuf:"bytes,4,opt,name=combat,proto3,oneof"`
}

func (*GatewayCommand_Presence) isGatewayCommand_Command() {}

func (*GatewayCommand_Client) isGatewayCommand_Command() {}

func (*GatewayCommand_Lobby) isGatewayCommand_Command() {}

func (*GatewayCommand_Combat) isGatewayCommand_Command() {}

type GatewayEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*GatewayEvent_Presence
	//	*GatewayEvent_Client
	//	*GatewayEvent_Lobby
	//	*GatewayEvent_Combat
	Event isGatewayEvent_Event `protobuf_oneof:"event"`
}

func (x *GatewayEvent) Reset() {
	*x = GatewayEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayEvent) ProtoMessage() {}

func (x *GatewayEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayEvent.ProtoReflect.Descriptor instead.
func (*GatewayEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescGZIP(), []int{1}
}

func (m *GatewayEvent) GetEvent() isGatewayEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *GatewayEvent) GetPresence() *v1alpha1.PresenceEvent {
	if x, ok := x.GetEvent().(*GatewayEvent_Presence); ok {
		return x.Presence
	}
	return nil
}

func (x *GatewayEvent) GetClient() *ClientEvent {
	if x, ok := x.GetEvent().(*GatewayEvent_Client); ok {
		return x.Client
	}
	return nil
}

func (x *GatewayEvent) GetLobby() *v1alpha11.LobbyEvent {
	if x, ok := x.GetEvent().(*GatewayEvent_Lobby); ok {
		return x.Lobby
	}
	return nil
}

func (x *GatewayEvent) GetCombat() *v1alpha11.CombatEvent {
	if x, ok := x.GetEvent().(*GatewayEvent_Combat); ok {
		return x.Combat
	}
	return nil
}

type isGatewayEvent_Event interface {
	isGatewayEvent_Event()
}

type GatewayEvent_Presence struct {
	Presence *v1alpha1.PresenceEvent `protobuf:"bytes,1,opt,name=presence,proto3,oneof"`
}

type GatewayEvent_Client struct {
	Client *ClientEvent `protobuf:"bytes,2,opt,name=client,proto3,oneof"`
}

type GatewayEvent_Lobby struct {
	Lobby *v1alpha11.LobbyEvent `protobuf:"bytes,3,opt,name=lobby,proto3,oneof"`
}

type GatewayEvent_Combat struct {
	Combat *v1alpha11.CombatEvent `protobuf:"bytes,4,opt,name=combat,proto3,oneof"`
}

func (*GatewayEvent_Presence) isGatewayEvent_Event() {}

func (*GatewayEvent_Client) isGatewayEvent_Event() {}

func (*GatewayEvent_Lobby) isGatewayEvent_Event() {}

func (*GatewayEvent_Combat) isGatewayEvent_Event() {}

var File_pkg_api_eventing_v1alpha1_gateway_proto protoreflect.FileDescriptor

var file_pkg_api_eventing_v1alpha1_gateway_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x73, 0x68, 0x69, 0x6b, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x25, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x0e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c,
	0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48,
	0x00, 0x52, 0x05, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x47, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xb9, 0x02, 0x0a,
	0x0c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a,
	0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69,
	0x61, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x68, 0x69,
	0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e,
	0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x05, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x84, 0x01, 0x0a, 0x07, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x12, 0x79, 0x0a, 0x0f, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x31, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x2f, 0x2e, 0x73, 0x68, 0x69,
	0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e,
	0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescOnce sync.Once
	file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescData = file_pkg_api_eventing_v1alpha1_gateway_proto_rawDesc
)

func file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescGZIP() []byte {
	file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescOnce.Do(func() {
		file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescData)
	})
	return file_pkg_api_eventing_v1alpha1_gateway_proto_rawDescData
}

var file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_api_eventing_v1alpha1_gateway_proto_goTypes = []interface{}{
	(*GatewayCommand)(nil),           // 0: shikanime.elkia.eventing.v1alpha1.GatewayCommand
	(*GatewayEvent)(nil),             // 1: shikanime.elkia.eventing.v1alpha1.GatewayEvent
	(*v1alpha1.PresenceCommand)(nil), // 2: shikanime.elkia.fleet.v1alpha1.PresenceCommand
	(*ClientCommand)(nil),            // 3: shikanime.elkia.eventing.v1alpha1.ClientCommand
	(*v1alpha11.LobbyCommand)(nil),   // 4: shikanime.elkia.world.v1alpha1.LobbyCommand
	(*v1alpha11.CombatCommand)(nil),  // 5: shikanime.elkia.world.v1alpha1.CombatCommand
	(*v1alpha1.PresenceEvent)(nil),   // 6: shikanime.elkia.fleet.v1alpha1.PresenceEvent
	(*ClientEvent)(nil),              // 7: shikanime.elkia.eventing.v1alpha1.ClientEvent
	(*v1alpha11.LobbyEvent)(nil),     // 8: shikanime.elkia.world.v1alpha1.LobbyEvent
	(*v1alpha11.CombatEvent)(nil),    // 9: shikanime.elkia.world.v1alpha1.CombatEvent
}
var file_pkg_api_eventing_v1alpha1_gateway_proto_depIdxs = []int32{
	2, // 0: shikanime.elkia.eventing.v1alpha1.GatewayCommand.presence:type_name -> shikanime.elkia.fleet.v1alpha1.PresenceCommand
	3, // 1: shikanime.elkia.eventing.v1alpha1.GatewayCommand.client:type_name -> shikanime.elkia.eventing.v1alpha1.ClientCommand
	4, // 2: shikanime.elkia.eventing.v1alpha1.GatewayCommand.lobby:type_name -> shikanime.elkia.world.v1alpha1.LobbyCommand
	5, // 3: shikanime.elkia.eventing.v1alpha1.GatewayCommand.combat:type_name -> shikanime.elkia.world.v1alpha1.CombatCommand
	6, // 4: shikanime.elkia.eventing.v1alpha1.GatewayEvent.presence:type_name -> shikanime.elkia.fleet.v1alpha1.PresenceEvent
	7, // 5: shikanime.elkia.eventing.v1alpha1.GatewayEvent.client:type_name -> shikanime.elkia.eventing.v1alpha1.ClientEvent
	8, // 6: shikanime.elkia.eventing.v1alpha1.GatewayEvent.lobby:type_name -> shikanime.elkia.world.v1alpha1.LobbyEvent
	9, // 7: shikanime.elkia.eventing.v1alpha1.GatewayEvent.combat:type_name -> shikanime.elkia.world.v1alpha1.CombatEvent
	0, // 8: shikanime.elkia.eventing.v1alpha1.Gateway.GatewayInteract:input_type -> shikanime.elkia.eventing.v1alpha1.GatewayCommand
	1, // 9: shikanime.elkia.eventing.v1alpha1.Gateway.GatewayInteract:output_type -> shikanime.elkia.eventing.v1alpha1.GatewayEvent
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_api_eventing_v1alpha1_gateway_proto_init() }
func file_pkg_api_eventing_v1alpha1_gateway_proto_init() {
	if File_pkg_api_eventing_v1alpha1_gateway_proto != nil {
		return
	}
	file_pkg_api_eventing_v1alpha1_client_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GatewayCommand_Presence)(nil),
		(*GatewayCommand_Client)(nil),
		(*GatewayCommand_Lobby)(nil),
		(*GatewayCommand_Combat)(nil),
	}
	file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GatewayEvent_Presence)(nil),
		(*GatewayEvent_Client)(nil),
		(*GatewayEvent_Lobby)(nil),
		(*GatewayEvent_Combat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_eventing_v1alpha1_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_eventing_v1alpha1_gateway_proto_goTypes,
		DependencyIndexes: file_pkg_api_eventing_v1alpha1_gateway_proto_depIdxs,
		MessageInfos:      file_pkg_api_eventing_v1alpha1_gateway_proto_msgTypes,
	}.Build()
	File_pkg_api_eventing_v1alpha1_gateway_proto = out.File
	file_pkg_api_eventing_v1alpha1_gateway_proto_rawDesc = nil
	file_pkg_api_eventing_v1alpha1_gateway_proto_goTypes = nil
	file_pkg_api_eventing_v1alpha1_gateway_proto_depIdxs = nil
}
