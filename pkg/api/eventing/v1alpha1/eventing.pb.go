// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: pkg/api/eventing/v1alpha1/eventing.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DialogErrorCode int32

const (
	DialogErrorCode_OUTDATED_CLIENT      DialogErrorCode = 0
	DialogErrorCode_UNEXPECTED_ERROR     DialogErrorCode = 1
	DialogErrorCode_MAINTENANCE          DialogErrorCode = 2
	DialogErrorCode_SESSION_ALREADY_USED DialogErrorCode = 3
	DialogErrorCode_UNVALID_CREDENTIALS  DialogErrorCode = 4
	DialogErrorCode_CANT_AUTHENTICATE    DialogErrorCode = 5
	DialogErrorCode_USER_BLOCKLISTED     DialogErrorCode = 6
	DialogErrorCode_COUNTRY_BLACKLISTED  DialogErrorCode = 7
	DialogErrorCode_BAD_CASE             DialogErrorCode = 8
)

// Enum value maps for DialogErrorCode.
var (
	DialogErrorCode_name = map[int32]string{
		0: "OUTDATED_CLIENT",
		1: "UNEXPECTED_ERROR",
		2: "MAINTENANCE",
		3: "SESSION_ALREADY_USED",
		4: "UNVALID_CREDENTIALS",
		5: "CANT_AUTHENTICATE",
		6: "USER_BLOCKLISTED",
		7: "COUNTRY_BLACKLISTED",
		8: "BAD_CASE",
	}
	DialogErrorCode_value = map[string]int32{
		"OUTDATED_CLIENT":      0,
		"UNEXPECTED_ERROR":     1,
		"MAINTENANCE":          2,
		"SESSION_ALREADY_USED": 3,
		"UNVALID_CREDENTIALS":  4,
		"CANT_AUTHENTICATE":    5,
		"USER_BLOCKLISTED":     6,
		"COUNTRY_BLACKLISTED":  7,
		"BAD_CASE":             8,
	}
)

func (x DialogErrorCode) Enum() *DialogErrorCode {
	p := new(DialogErrorCode)
	*p = x
	return p
}

func (x DialogErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DialogErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[0].Descriptor()
}

func (DialogErrorCode) Type() protoreflect.EnumType {
	return &file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[0]
}

func (x DialogErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DialogErrorCode.Descriptor instead.
func (DialogErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{0}
}

type DialogErrorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code DialogErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=io.elkia.eventing.v1alpha1.DialogErrorCode" json:"code,omitempty"`
}

func (x *DialogErrorEvent) Reset() {
	*x = DialogErrorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogErrorEvent) ProtoMessage() {}

func (x *DialogErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogErrorEvent.ProtoReflect.Descriptor instead.
func (*DialogErrorEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{0}
}

func (x *DialogErrorEvent) GetCode() DialogErrorCode {
	if x != nil {
		return x.Code
	}
	return DialogErrorCode_OUTDATED_CLIENT
}

type DialogInfoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *DialogInfoEvent) Reset() {
	*x = DialogInfoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogInfoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogInfoEvent) ProtoMessage() {}

func (x *DialogInfoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogInfoEvent.ProtoReflect.Descriptor instead.
func (*DialogInfoEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{1}
}

func (x *DialogInfoEvent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AuthLoginEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Password       string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	ClientVersion  string `protobuf:"bytes,5,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ClientChecksum string `protobuf:"bytes,7,opt,name=client_checksum,json=clientChecksum,proto3" json:"client_checksum,omitempty"`
}

func (x *AuthLoginEvent) Reset() {
	*x = AuthLoginEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLoginEvent) ProtoMessage() {}

func (x *AuthLoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLoginEvent.ProtoReflect.Descriptor instead.
func (*AuthLoginEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{2}
}

func (x *AuthLoginEvent) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *AuthLoginEvent) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthLoginEvent) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *AuthLoginEvent) GetClientChecksum() string {
	if x != nil {
		return x.ClientChecksum
	}
	return ""
}

type Gateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port      string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Weight    uint32 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	WorldId   uint32 `protobuf:"varint,4,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	ChannelId uint32 `protobuf:"varint,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	WorldName string `protobuf:"bytes,6,opt,name=world_name,json=worldName,proto3" json:"world_name,omitempty"`
}

func (x *Gateway) Reset() {
	*x = Gateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gateway) ProtoMessage() {}

func (x *Gateway) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gateway.ProtoReflect.Descriptor instead.
func (*Gateway) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{3}
}

func (x *Gateway) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Gateway) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Gateway) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Gateway) GetWorldId() uint32 {
	if x != nil {
		return x.WorldId
	}
	return 0
}

func (x *Gateway) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *Gateway) GetWorldName() string {
	if x != nil {
		return x.WorldName
	}
	return ""
}

type GatewayListEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      uint32     `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Gateways []*Gateway `protobuf:"bytes,2,rep,name=gateways,proto3" json:"gateways,omitempty"`
}

func (x *GatewayListEvent) Reset() {
	*x = GatewayListEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayListEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayListEvent) ProtoMessage() {}

func (x *GatewayListEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayListEvent.ProtoReflect.Descriptor instead.
func (*GatewayListEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{4}
}

func (x *GatewayListEvent) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *GatewayListEvent) GetGateways() []*Gateway {
	if x != nil {
		return x.Gateways
	}
	return nil
}

type AuthInteractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*AuthInteractRequest_LoginEvent
	Payload isAuthInteractRequest_Payload `protobuf_oneof:"payload"`
}

func (x *AuthInteractRequest) Reset() {
	*x = AuthInteractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthInteractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInteractRequest) ProtoMessage() {}

func (x *AuthInteractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInteractRequest.ProtoReflect.Descriptor instead.
func (*AuthInteractRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{5}
}

func (m *AuthInteractRequest) GetPayload() isAuthInteractRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AuthInteractRequest) GetLoginEvent() *AuthLoginEvent {
	if x, ok := x.GetPayload().(*AuthInteractRequest_LoginEvent); ok {
		return x.LoginEvent
	}
	return nil
}

type isAuthInteractRequest_Payload interface {
	isAuthInteractRequest_Payload()
}

type AuthInteractRequest_LoginEvent struct {
	LoginEvent *AuthLoginEvent `protobuf:"bytes,1,opt,name=login_event,json=loginEvent,proto3,oneof"`
}

func (*AuthInteractRequest_LoginEvent) isAuthInteractRequest_Payload() {}

type AuthInteractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*AuthInteractResponse_DialogErrorEvent
	//	*AuthInteractResponse_DialogInfoEvent
	//	*AuthInteractResponse_GatewayListEvent
	Payload isAuthInteractResponse_Payload `protobuf_oneof:"payload"`
}

func (x *AuthInteractResponse) Reset() {
	*x = AuthInteractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthInteractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInteractResponse) ProtoMessage() {}

func (x *AuthInteractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInteractResponse.ProtoReflect.Descriptor instead.
func (*AuthInteractResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{6}
}

func (m *AuthInteractResponse) GetPayload() isAuthInteractResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AuthInteractResponse) GetDialogErrorEvent() *DialogErrorEvent {
	if x, ok := x.GetPayload().(*AuthInteractResponse_DialogErrorEvent); ok {
		return x.DialogErrorEvent
	}
	return nil
}

func (x *AuthInteractResponse) GetDialogInfoEvent() *DialogInfoEvent {
	if x, ok := x.GetPayload().(*AuthInteractResponse_DialogInfoEvent); ok {
		return x.DialogInfoEvent
	}
	return nil
}

func (x *AuthInteractResponse) GetGatewayListEvent() *GatewayListEvent {
	if x, ok := x.GetPayload().(*AuthInteractResponse_GatewayListEvent); ok {
		return x.GatewayListEvent
	}
	return nil
}

type isAuthInteractResponse_Payload interface {
	isAuthInteractResponse_Payload()
}

type AuthInteractResponse_DialogErrorEvent struct {
	DialogErrorEvent *DialogErrorEvent `protobuf:"bytes,1,opt,name=dialog_error_event,json=dialogErrorEvent,proto3,oneof"`
}

type AuthInteractResponse_DialogInfoEvent struct {
	DialogInfoEvent *DialogInfoEvent `protobuf:"bytes,2,opt,name=dialog_info_event,json=dialogInfoEvent,proto3,oneof"`
}

type AuthInteractResponse_GatewayListEvent struct {
	GatewayListEvent *GatewayListEvent `protobuf:"bytes,3,opt,name=gateway_list_event,json=gatewayListEvent,proto3,oneof"`
}

func (*AuthInteractResponse_DialogErrorEvent) isAuthInteractResponse_Payload() {}

func (*AuthInteractResponse_DialogInfoEvent) isAuthInteractResponse_Payload() {}

func (*AuthInteractResponse_GatewayListEvent) isAuthInteractResponse_Payload() {}

type SyncEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *SyncEvent) Reset() {
	*x = SyncEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncEvent) ProtoMessage() {}

func (x *SyncEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncEvent.ProtoReflect.Descriptor instead.
func (*SyncEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{7}
}

func (x *SyncEvent) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type AuthHandoffKeyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Key      uint32 `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *AuthHandoffKeyEvent) Reset() {
	*x = AuthHandoffKeyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthHandoffKeyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthHandoffKeyEvent) ProtoMessage() {}

func (x *AuthHandoffKeyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthHandoffKeyEvent.ProtoReflect.Descriptor instead.
func (*AuthHandoffKeyEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{8}
}

func (x *AuthHandoffKeyEvent) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *AuthHandoffKeyEvent) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

type AuthHandoffPasswordEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AuthHandoffPasswordEvent) Reset() {
	*x = AuthHandoffPasswordEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthHandoffPasswordEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthHandoffPasswordEvent) ProtoMessage() {}

func (x *AuthHandoffPasswordEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthHandoffPasswordEvent.ProtoReflect.Descriptor instead.
func (*AuthHandoffPasswordEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{9}
}

func (x *AuthHandoffPasswordEvent) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *AuthHandoffPasswordEvent) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthHandoffEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyEvent      *AuthHandoffKeyEvent      `protobuf:"bytes,1,opt,name=key_event,json=keyEvent,proto3" json:"key_event,omitempty"`
	PasswordEvent *AuthHandoffPasswordEvent `protobuf:"bytes,2,opt,name=password_event,json=passwordEvent,proto3" json:"password_event,omitempty"`
}

func (x *AuthHandoffEvent) Reset() {
	*x = AuthHandoffEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthHandoffEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthHandoffEvent) ProtoMessage() {}

func (x *AuthHandoffEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthHandoffEvent.ProtoReflect.Descriptor instead.
func (*AuthHandoffEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{10}
}

func (x *AuthHandoffEvent) GetKeyEvent() *AuthHandoffKeyEvent {
	if x != nil {
		return x.KeyEvent
	}
	return nil
}

func (x *AuthHandoffEvent) GetPasswordEvent() *AuthHandoffPasswordEvent {
	if x != nil {
		return x.PasswordEvent
	}
	return nil
}

type AuthHandoffSuccessEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Sequence uint32 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *AuthHandoffSuccessEvent) Reset() {
	*x = AuthHandoffSuccessEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthHandoffSuccessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthHandoffSuccessEvent) ProtoMessage() {}

func (x *AuthHandoffSuccessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthHandoffSuccessEvent.ProtoReflect.Descriptor instead.
func (*AuthHandoffSuccessEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{11}
}

func (x *AuthHandoffSuccessEvent) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *AuthHandoffSuccessEvent) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type HandshakeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*HandshakeEvent_FallbackEvent
	//	*HandshakeEvent_SyncEvent
	//	*HandshakeEvent_AuthHandoffEvent
	Payload isHandshakeEvent_Payload `protobuf_oneof:"payload"`
}

func (x *HandshakeEvent) Reset() {
	*x = HandshakeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeEvent) ProtoMessage() {}

func (x *HandshakeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeEvent.ProtoReflect.Descriptor instead.
func (*HandshakeEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{12}
}

func (m *HandshakeEvent) GetPayload() isHandshakeEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *HandshakeEvent) GetFallbackEvent() []byte {
	if x, ok := x.GetPayload().(*HandshakeEvent_FallbackEvent); ok {
		return x.FallbackEvent
	}
	return nil
}

func (x *HandshakeEvent) GetSyncEvent() *SyncEvent {
	if x, ok := x.GetPayload().(*HandshakeEvent_SyncEvent); ok {
		return x.SyncEvent
	}
	return nil
}

func (x *HandshakeEvent) GetAuthHandoffEvent() *AuthHandoffEvent {
	if x, ok := x.GetPayload().(*HandshakeEvent_AuthHandoffEvent); ok {
		return x.AuthHandoffEvent
	}
	return nil
}

type isHandshakeEvent_Payload interface {
	isHandshakeEvent_Payload()
}

type HandshakeEvent_FallbackEvent struct {
	FallbackEvent []byte `protobuf:"bytes,1,opt,name=fallback_event,json=fallbackEvent,proto3,oneof"`
}

type HandshakeEvent_SyncEvent struct {
	SyncEvent *SyncEvent `protobuf:"bytes,3,opt,name=sync_event,json=syncEvent,proto3,oneof"`
}

type HandshakeEvent_AuthHandoffEvent struct {
	AuthHandoffEvent *AuthHandoffEvent `protobuf:"bytes,4,opt,name=auth_handoff_event,json=authHandoffEvent,proto3,oneof"`
}

func (*HandshakeEvent_FallbackEvent) isHandshakeEvent_Payload() {}

func (*HandshakeEvent_SyncEvent) isHandshakeEvent_Payload() {}

func (*HandshakeEvent_AuthHandoffEvent) isHandshakeEvent_Payload() {}

type ChannelEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	OpCode   string `protobuf:"bytes,2,opt,name=op_code,json=opCode,proto3" json:"op_code,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ChannelEvent_UnknownPayload
	Payload isChannelEvent_Payload `protobuf_oneof:"payload"`
}

func (x *ChannelEvent) Reset() {
	*x = ChannelEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEvent) ProtoMessage() {}

func (x *ChannelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEvent.ProtoReflect.Descriptor instead.
func (*ChannelEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{13}
}

func (x *ChannelEvent) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ChannelEvent) GetOpCode() string {
	if x != nil {
		return x.OpCode
	}
	return ""
}

func (m *ChannelEvent) GetPayload() isChannelEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ChannelEvent) GetUnknownPayload() []byte {
	if x, ok := x.GetPayload().(*ChannelEvent_UnknownPayload); ok {
		return x.UnknownPayload
	}
	return nil
}

type isChannelEvent_Payload interface {
	isChannelEvent_Payload()
}

type ChannelEvent_UnknownPayload struct {
	UnknownPayload []byte `protobuf:"bytes,3,opt,name=unknown_payload,json=unknownPayload,proto3,oneof"`
}

func (*ChannelEvent_UnknownPayload) isChannelEvent_Payload() {}

type ChannelInteractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ChannelInteractRequest_HandshakeEvent
	//	*ChannelInteractRequest_ChannelEvent
	Payload isChannelInteractRequest_Payload `protobuf_oneof:"payload"`
}

func (x *ChannelInteractRequest) Reset() {
	*x = ChannelInteractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInteractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInteractRequest) ProtoMessage() {}

func (x *ChannelInteractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInteractRequest.ProtoReflect.Descriptor instead.
func (*ChannelInteractRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{14}
}

func (m *ChannelInteractRequest) GetPayload() isChannelInteractRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ChannelInteractRequest) GetHandshakeEvent() *HandshakeEvent {
	if x, ok := x.GetPayload().(*ChannelInteractRequest_HandshakeEvent); ok {
		return x.HandshakeEvent
	}
	return nil
}

func (x *ChannelInteractRequest) GetChannelEvent() *ChannelEvent {
	if x, ok := x.GetPayload().(*ChannelInteractRequest_ChannelEvent); ok {
		return x.ChannelEvent
	}
	return nil
}

type isChannelInteractRequest_Payload interface {
	isChannelInteractRequest_Payload()
}

type ChannelInteractRequest_HandshakeEvent struct {
	HandshakeEvent *HandshakeEvent `protobuf:"bytes,1,opt,name=handshake_event,json=handshakeEvent,proto3,oneof"`
}

type ChannelInteractRequest_ChannelEvent struct {
	ChannelEvent *ChannelEvent `protobuf:"bytes,2,opt,name=channel_event,json=channelEvent,proto3,oneof"`
}

func (*ChannelInteractRequest_HandshakeEvent) isChannelInteractRequest_Payload() {}

func (*ChannelInteractRequest_ChannelEvent) isChannelInteractRequest_Payload() {}

type ChannelInteractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ChannelInteractResponse_DialogErrorEvent
	//	*ChannelInteractResponse_DialogInfoEvent
	Payload isChannelInteractResponse_Payload `protobuf_oneof:"payload"`
}

func (x *ChannelInteractResponse) Reset() {
	*x = ChannelInteractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInteractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInteractResponse) ProtoMessage() {}

func (x *ChannelInteractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInteractResponse.ProtoReflect.Descriptor instead.
func (*ChannelInteractResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{15}
}

func (m *ChannelInteractResponse) GetPayload() isChannelInteractResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ChannelInteractResponse) GetDialogErrorEvent() *DialogErrorEvent {
	if x, ok := x.GetPayload().(*ChannelInteractResponse_DialogErrorEvent); ok {
		return x.DialogErrorEvent
	}
	return nil
}

func (x *ChannelInteractResponse) GetDialogInfoEvent() *DialogInfoEvent {
	if x, ok := x.GetPayload().(*ChannelInteractResponse_DialogInfoEvent); ok {
		return x.DialogInfoEvent
	}
	return nil
}

type isChannelInteractResponse_Payload interface {
	isChannelInteractResponse_Payload()
}

type ChannelInteractResponse_DialogErrorEvent struct {
	DialogErrorEvent *DialogErrorEvent `protobuf:"bytes,1,opt,name=dialog_error_event,json=dialogErrorEvent,proto3,oneof"`
}

type ChannelInteractResponse_DialogInfoEvent struct {
	DialogInfoEvent *DialogInfoEvent `protobuf:"bytes,2,opt,name=dialog_info_event,json=dialogInfoEvent,proto3,oneof"`
}

func (*ChannelInteractResponse_DialogErrorEvent) isChannelInteractResponse_Payload() {}

func (*ChannelInteractResponse_DialogInfoEvent) isChannelInteractResponse_Payload() {}

var File_pkg_api_eventing_v1alpha1_eventing_proto protoreflect.FileDescriptor

var file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x69, 0x6f, 0x2e, 0x65,
	0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x53, 0x0a, 0x10, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c,
	0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x41, 0x75, 0x74,
	0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0xa2, 0x01, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x10,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3f, 0x0a, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x73, 0x22, 0x6f, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb8, 0x02, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x12, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x2e, 0x65,
	0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x11, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69,
	0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x12, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x27, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68,
	0x48, 0x61, 0x6e, 0x64, 0x6f, 0x66, 0x66, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x52, 0x0a,
	0x18, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x66, 0x66, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0xbd, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x66,
	0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6f, 0x2e, 0x65,
	0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x6e, 0x64, 0x6f,
	0x66, 0x66, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69,
	0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61,
	0x6e, 0x64, 0x6f, 0x66, 0x66, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x47, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x66, 0x66,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0e, 0x48,
	0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0e, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x2e,
	0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c,
	0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6f, 0x66, 0x66, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x2e,
	0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x6e, 0x64,
	0x6f, 0x66, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68,
	0x48, 0x61, 0x6e, 0x64, 0x6f, 0x66, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x79, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x0f,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a,
	0x0f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69,
	0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f,
	0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0xdd, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x12,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c,
	0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x11, 0x64, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2a, 0xd4, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x55, 0x54, 0x44, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x45,
	0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c,
	0x53, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48,
	0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x4c, 0x41, 0x43,
	0x4b, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x44,
	0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x08, 0x32, 0x83, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x75, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2f, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69,
	0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b,
	0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x32, 0x8f, 0x01,
	0x0a, 0x0d, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12,
	0x7e, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x32, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6c, 0x6b, 0x69,
	0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x1b, 0x5a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescOnce sync.Once
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData = file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc
)

func file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP() []byte {
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescOnce.Do(func() {
		file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData)
	})
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData
}

var file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pkg_api_eventing_v1alpha1_eventing_proto_goTypes = []interface{}{
	(DialogErrorCode)(0),             // 0: io.elkia.eventing.v1alpha1.DialogErrorCode
	(*DialogErrorEvent)(nil),         // 1: io.elkia.eventing.v1alpha1.DialogErrorEvent
	(*DialogInfoEvent)(nil),          // 2: io.elkia.eventing.v1alpha1.DialogInfoEvent
	(*AuthLoginEvent)(nil),           // 3: io.elkia.eventing.v1alpha1.AuthLoginEvent
	(*Gateway)(nil),                  // 4: io.elkia.eventing.v1alpha1.Gateway
	(*GatewayListEvent)(nil),         // 5: io.elkia.eventing.v1alpha1.GatewayListEvent
	(*AuthInteractRequest)(nil),      // 6: io.elkia.eventing.v1alpha1.AuthInteractRequest
	(*AuthInteractResponse)(nil),     // 7: io.elkia.eventing.v1alpha1.AuthInteractResponse
	(*SyncEvent)(nil),                // 8: io.elkia.eventing.v1alpha1.SyncEvent
	(*AuthHandoffKeyEvent)(nil),      // 9: io.elkia.eventing.v1alpha1.AuthHandoffKeyEvent
	(*AuthHandoffPasswordEvent)(nil), // 10: io.elkia.eventing.v1alpha1.AuthHandoffPasswordEvent
	(*AuthHandoffEvent)(nil),         // 11: io.elkia.eventing.v1alpha1.AuthHandoffEvent
	(*AuthHandoffSuccessEvent)(nil),  // 12: io.elkia.eventing.v1alpha1.AuthHandoffSuccessEvent
	(*HandshakeEvent)(nil),           // 13: io.elkia.eventing.v1alpha1.HandshakeEvent
	(*ChannelEvent)(nil),             // 14: io.elkia.eventing.v1alpha1.ChannelEvent
	(*ChannelInteractRequest)(nil),   // 15: io.elkia.eventing.v1alpha1.ChannelInteractRequest
	(*ChannelInteractResponse)(nil),  // 16: io.elkia.eventing.v1alpha1.ChannelInteractResponse
}
var file_pkg_api_eventing_v1alpha1_eventing_proto_depIdxs = []int32{
	0,  // 0: io.elkia.eventing.v1alpha1.DialogErrorEvent.code:type_name -> io.elkia.eventing.v1alpha1.DialogErrorCode
	4,  // 1: io.elkia.eventing.v1alpha1.GatewayListEvent.gateways:type_name -> io.elkia.eventing.v1alpha1.Gateway
	3,  // 2: io.elkia.eventing.v1alpha1.AuthInteractRequest.login_event:type_name -> io.elkia.eventing.v1alpha1.AuthLoginEvent
	1,  // 3: io.elkia.eventing.v1alpha1.AuthInteractResponse.dialog_error_event:type_name -> io.elkia.eventing.v1alpha1.DialogErrorEvent
	2,  // 4: io.elkia.eventing.v1alpha1.AuthInteractResponse.dialog_info_event:type_name -> io.elkia.eventing.v1alpha1.DialogInfoEvent
	5,  // 5: io.elkia.eventing.v1alpha1.AuthInteractResponse.gateway_list_event:type_name -> io.elkia.eventing.v1alpha1.GatewayListEvent
	9,  // 6: io.elkia.eventing.v1alpha1.AuthHandoffEvent.key_event:type_name -> io.elkia.eventing.v1alpha1.AuthHandoffKeyEvent
	10, // 7: io.elkia.eventing.v1alpha1.AuthHandoffEvent.password_event:type_name -> io.elkia.eventing.v1alpha1.AuthHandoffPasswordEvent
	8,  // 8: io.elkia.eventing.v1alpha1.HandshakeEvent.sync_event:type_name -> io.elkia.eventing.v1alpha1.SyncEvent
	11, // 9: io.elkia.eventing.v1alpha1.HandshakeEvent.auth_handoff_event:type_name -> io.elkia.eventing.v1alpha1.AuthHandoffEvent
	13, // 10: io.elkia.eventing.v1alpha1.ChannelInteractRequest.handshake_event:type_name -> io.elkia.eventing.v1alpha1.HandshakeEvent
	14, // 11: io.elkia.eventing.v1alpha1.ChannelInteractRequest.channel_event:type_name -> io.elkia.eventing.v1alpha1.ChannelEvent
	1,  // 12: io.elkia.eventing.v1alpha1.ChannelInteractResponse.dialog_error_event:type_name -> io.elkia.eventing.v1alpha1.DialogErrorEvent
	2,  // 13: io.elkia.eventing.v1alpha1.ChannelInteractResponse.dialog_info_event:type_name -> io.elkia.eventing.v1alpha1.DialogInfoEvent
	6,  // 14: io.elkia.eventing.v1alpha1.AuthBroker.AuthInteract:input_type -> io.elkia.eventing.v1alpha1.AuthInteractRequest
	15, // 15: io.elkia.eventing.v1alpha1.GatewayBroker.ChannelInteract:input_type -> io.elkia.eventing.v1alpha1.ChannelInteractRequest
	7,  // 16: io.elkia.eventing.v1alpha1.AuthBroker.AuthInteract:output_type -> io.elkia.eventing.v1alpha1.AuthInteractResponse
	16, // 17: io.elkia.eventing.v1alpha1.GatewayBroker.ChannelInteract:output_type -> io.elkia.eventing.v1alpha1.ChannelInteractResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_api_eventing_v1alpha1_eventing_proto_init() }
func file_pkg_api_eventing_v1alpha1_eventing_proto_init() {
	if File_pkg_api_eventing_v1alpha1_eventing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogErrorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogInfoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLoginEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayListEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthInteractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthInteractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthHandoffKeyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthHandoffPasswordEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthHandoffEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthHandoffSuccessEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInteractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInteractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AuthInteractRequest_LoginEvent)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*AuthInteractResponse_DialogErrorEvent)(nil),
		(*AuthInteractResponse_DialogInfoEvent)(nil),
		(*AuthInteractResponse_GatewayListEvent)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*HandshakeEvent_FallbackEvent)(nil),
		(*HandshakeEvent_SyncEvent)(nil),
		(*HandshakeEvent_AuthHandoffEvent)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ChannelEvent_UnknownPayload)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ChannelInteractRequest_HandshakeEvent)(nil),
		(*ChannelInteractRequest_ChannelEvent)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ChannelInteractResponse_DialogErrorEvent)(nil),
		(*ChannelInteractResponse_DialogInfoEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_api_eventing_v1alpha1_eventing_proto_goTypes,
		DependencyIndexes: file_pkg_api_eventing_v1alpha1_eventing_proto_depIdxs,
		EnumInfos:         file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes,
		MessageInfos:      file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes,
	}.Build()
	File_pkg_api_eventing_v1alpha1_eventing_proto = out.File
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc = nil
	file_pkg_api_eventing_v1alpha1_eventing_proto_goTypes = nil
	file_pkg_api_eventing_v1alpha1_eventing_proto_depIdxs = nil
}
