// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.12
// source: pkg/api/eventing/v1alpha1/eventing.proto

package v1alpha1

import (
	v1alpha1 "go.shikanime.studio/elkia/pkg/api/world/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_OUTDATED_CLIENT      Code = 0
	Code_UNEXPECTED_ERROR     Code = 1
	Code_MAINTENANCE          Code = 2
	Code_SESSION_ALREADY_USED Code = 3
	Code_UNVALID_CREDENTIALS  Code = 4
	Code_CANT_AUTHENTICATE    Code = 5
	Code_USER_BLOCKLISTED     Code = 6
	Code_COUNTRY_BLACKLISTED  Code = 7
	Code_BAD_CASE             Code = 8
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "OUTDATED_CLIENT",
		1: "UNEXPECTED_ERROR",
		2: "MAINTENANCE",
		3: "SESSION_ALREADY_USED",
		4: "UNVALID_CREDENTIALS",
		5: "CANT_AUTHENTICATE",
		6: "USER_BLOCKLISTED",
		7: "COUNTRY_BLACKLISTED",
		8: "BAD_CASE",
	}
	Code_value = map[string]int32{
		"OUTDATED_CLIENT":      0,
		"UNEXPECTED_ERROR":     1,
		"MAINTENANCE":          2,
		"SESSION_ALREADY_USED": 3,
		"UNVALID_CREDENTIALS":  4,
		"CANT_AUTHENTICATE":    5,
		"USER_BLOCKLISTED":     6,
		"COUNTRY_BLACKLISTED":  7,
		"BAD_CASE":             8,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{0}
}

type RequestType int32

const (
	RequestType_REQUESTED RequestType = 0
	RequestType_LIST      RequestType = 1
	RequestType_CONFIRMED RequestType = 2
	RequestType_CANCELLED RequestType = 3
	RequestType_DECLINED  RequestType = 4
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0: "REQUESTED",
		1: "LIST",
		2: "CONFIRMED",
		3: "CANCELLED",
		4: "DECLINED",
	}
	RequestType_value = map[string]int32{
		"REQUESTED": 0,
		"LIST":      1,
		"CONFIRMED": 2,
		"CANCELLED": 3,
		"DECLINED":  4,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[1].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[1]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{1}
}

type CharacterOptions int32

const (
	CharacterOptions_EXCHANGE_BLOCKED        CharacterOptions = 0
	CharacterOptions_FRIEND_REQUEST_BLOCKED  CharacterOptions = 1
	CharacterOptions_FAMILY_REQUEST_BLOCKED  CharacterOptions = 2
	CharacterOptions_WHISPER_BLOCKED         CharacterOptions = 3
	CharacterOptions_GROUP_REQUEST_BLOCKED   CharacterOptions = 4
	CharacterOptions_GROUP_SHARING           CharacterOptions = 5
	CharacterOptions_MOUSE_AIM_LOCK          CharacterOptions = 6
	CharacterOptions_HERO_CHAT_BLOCKED       CharacterOptions = 7
	CharacterOptions_EMOTICONS_BLOCKED       CharacterOptions = 8
	CharacterOptions_QUICK_GET_UP            CharacterOptions = 9
	CharacterOptions_HP_BLOCKED              CharacterOptions = 10
	CharacterOptions_BUFF_BLOCKED            CharacterOptions = 11
	CharacterOptions_MINILAND_INVITE_BLOCKED CharacterOptions = 12
)

// Enum value maps for CharacterOptions.
var (
	CharacterOptions_name = map[int32]string{
		0:  "EXCHANGE_BLOCKED",
		1:  "FRIEND_REQUEST_BLOCKED",
		2:  "FAMILY_REQUEST_BLOCKED",
		3:  "WHISPER_BLOCKED",
		4:  "GROUP_REQUEST_BLOCKED",
		5:  "GROUP_SHARING",
		6:  "MOUSE_AIM_LOCK",
		7:  "HERO_CHAT_BLOCKED",
		8:  "EMOTICONS_BLOCKED",
		9:  "QUICK_GET_UP",
		10: "HP_BLOCKED",
		11: "BUFF_BLOCKED",
		12: "MINILAND_INVITE_BLOCKED",
	}
	CharacterOptions_value = map[string]int32{
		"EXCHANGE_BLOCKED":        0,
		"FRIEND_REQUEST_BLOCKED":  1,
		"FAMILY_REQUEST_BLOCKED":  2,
		"WHISPER_BLOCKED":         3,
		"GROUP_REQUEST_BLOCKED":   4,
		"GROUP_SHARING":           5,
		"MOUSE_AIM_LOCK":          6,
		"HERO_CHAT_BLOCKED":       7,
		"EMOTICONS_BLOCKED":       8,
		"QUICK_GET_UP":            9,
		"HP_BLOCKED":              10,
		"BUFF_BLOCKED":            11,
		"MINILAND_INVITE_BLOCKED": 12,
	}
)

func (x CharacterOptions) Enum() *CharacterOptions {
	p := new(CharacterOptions)
	*p = x
	return p
}

func (x CharacterOptions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterOptions) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[2].Descriptor()
}

func (CharacterOptions) Type() protoreflect.EnumType {
	return &file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes[2]
}

func (x CharacterOptions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterOptions.Descriptor instead.
func (CharacterOptions) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{2}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=shikanime.elkia.eventing.v1alpha1.Code" json:"code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OUTDATED_CLIENT
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{1}
}

func (x *Info) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateLoginFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Password       string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	ClientVersion  string `protobuf:"bytes,5,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ClientChecksum string `protobuf:"bytes,7,opt,name=client_checksum,json=clientChecksum,proto3" json:"client_checksum,omitempty"`
}

func (x *CreateLoginFlowRequest) Reset() {
	*x = CreateLoginFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoginFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoginFlowRequest) ProtoMessage() {}

func (x *CreateLoginFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoginFlowRequest.ProtoReflect.Descriptor instead.
func (*CreateLoginFlowRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLoginFlowRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *CreateLoginFlowRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateLoginFlowRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *CreateLoginFlowRequest) GetClientChecksum() string {
	if x != nil {
		return x.ClientChecksum
	}
	return ""
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port      string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Weight    uint32 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	WorldId   uint32 `protobuf:"varint,4,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	ChannelId uint32 `protobuf:"varint,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	WorldName string `protobuf:"bytes,6,opt,name=world_name,json=worldName,proto3" json:"world_name,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{3}
}

func (x *Endpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Endpoint) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Endpoint) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Endpoint) GetWorldId() uint32 {
	if x != nil {
		return x.WorldId
	}
	return 0
}

func (x *Endpoint) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *Endpoint) GetWorldName() string {
	if x != nil {
		return x.WorldName
	}
	return ""
}

type AuthInteractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*AuthInteractRequest_CreateLoginFlow
	Request isAuthInteractRequest_Request `protobuf_oneof:"request"`
}

func (x *AuthInteractRequest) Reset() {
	*x = AuthInteractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthInteractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInteractRequest) ProtoMessage() {}

func (x *AuthInteractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInteractRequest.ProtoReflect.Descriptor instead.
func (*AuthInteractRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{4}
}

func (m *AuthInteractRequest) GetRequest() isAuthInteractRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *AuthInteractRequest) GetCreateLoginFlow() *CreateLoginFlowRequest {
	if x, ok := x.GetRequest().(*AuthInteractRequest_CreateLoginFlow); ok {
		return x.CreateLoginFlow
	}
	return nil
}

type isAuthInteractRequest_Request interface {
	isAuthInteractRequest_Request()
}

type AuthInteractRequest_CreateLoginFlow struct {
	CreateLoginFlow *CreateLoginFlowRequest `protobuf:"bytes,1,opt,name=create_login_flow,json=createLoginFlow,proto3,oneof"`
}

func (*AuthInteractRequest_CreateLoginFlow) isAuthInteractRequest_Request() {}

type CreateLoginFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Endpoints []*Endpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
}

func (x *CreateLoginFlowResponse) Reset() {
	*x = CreateLoginFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoginFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoginFlowResponse) ProtoMessage() {}

func (x *CreateLoginFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoginFlowResponse.ProtoReflect.Descriptor instead.
func (*CreateLoginFlowResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLoginFlowResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateLoginFlowResponse) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type AuthInteractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AuthInteractResponse_Error
	//	*AuthInteractResponse_Info
	//	*AuthInteractResponse_CreateLoginFlow
	Response isAuthInteractResponse_Response `protobuf_oneof:"response"`
}

func (x *AuthInteractResponse) Reset() {
	*x = AuthInteractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthInteractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInteractResponse) ProtoMessage() {}

func (x *AuthInteractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInteractResponse.ProtoReflect.Descriptor instead.
func (*AuthInteractResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{6}
}

func (m *AuthInteractResponse) GetResponse() isAuthInteractResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AuthInteractResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*AuthInteractResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AuthInteractResponse) GetInfo() *Info {
	if x, ok := x.GetResponse().(*AuthInteractResponse_Info); ok {
		return x.Info
	}
	return nil
}

func (x *AuthInteractResponse) GetCreateLoginFlow() *CreateLoginFlowResponse {
	if x, ok := x.GetResponse().(*AuthInteractResponse_CreateLoginFlow); ok {
		return x.CreateLoginFlow
	}
	return nil
}

type isAuthInteractResponse_Response interface {
	isAuthInteractResponse_Response()
}

type AuthInteractResponse_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AuthInteractResponse_Info struct {
	Info *Info `protobuf:"bytes,2,opt,name=info,proto3,oneof"`
}

type AuthInteractResponse_CreateLoginFlow struct {
	CreateLoginFlow *CreateLoginFlowResponse `protobuf:"bytes,3,opt,name=create_login_flow,json=createLoginFlow,proto3,oneof"`
}

func (*AuthInteractResponse_Error) isAuthInteractResponse_Response() {}

func (*AuthInteractResponse_Info) isAuthInteractResponse_Response() {}

func (*AuthInteractResponse_CreateLoginFlow) isAuthInteractResponse_Response() {}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Code     uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{7}
}

func (x *SyncRequest) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SyncRequest) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{8}
}

func (x *Identifier) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Identifier) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Password) Reset() {
	*x = Password{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Password) ProtoMessage() {}

func (x *Password) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Password.ProtoReflect.Descriptor instead.
func (*Password) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{9}
}

func (x *Password) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Password) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{10}
}

// TODO: unidentified f_stash_end frame
type FStashEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FStashEndRequest) Reset() {
	*x = FStashEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FStashEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FStashEndRequest) ProtoMessage() {}

func (x *FStashEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FStashEndRequest.ProtoReflect.Descriptor instead.
func (*FStashEndRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{11}
}

// TODO: unidentified c_close frame
type CCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CCloseRequest) Reset() {
	*x = CCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCloseRequest) ProtoMessage() {}

func (x *CCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCloseRequest.ProtoReflect.Descriptor instead.
func (*CCloseRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{12}
}

// TODO: unidentified lbs frame
type LBSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LBSRequest) Reset() {
	*x = LBSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LBSRequest) ProtoMessage() {}

func (x *LBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LBSRequest.ProtoReflect.Descriptor instead.
func (*LBSRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{13}
}

func (x *LBSRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type MultiTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId  string `protobuf:"bytes,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	TargetId uint32 `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *MultiTarget) Reset() {
	*x = MultiTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiTarget) ProtoMessage() {}

func (x *MultiTarget) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiTarget.ProtoReflect.Descriptor instead.
func (*MultiTarget) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{14}
}

func (x *MultiTarget) GetSkillId() string {
	if x != nil {
		return x.SkillId
	}
	return ""
}

func (x *MultiTarget) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type MultiTargetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAmount uint32         `protobuf:"varint,1,opt,name=target_amount,json=targetAmount,proto3" json:"target_amount,omitempty"`
	Targets      []*MultiTarget `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *MultiTargetListRequest) Reset() {
	*x = MultiTargetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiTargetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiTargetListRequest) ProtoMessage() {}

func (x *MultiTargetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiTargetListRequest.ProtoReflect.Descriptor instead.
func (*MultiTargetListRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{15}
}

func (x *MultiTargetListRequest) GetTargetAmount() uint32 {
	if x != nil {
		return x.TargetAmount
	}
	return 0
}

func (x *MultiTargetListRequest) GetTargets() []*MultiTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

type CharacterRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint32      `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Type        RequestType `protobuf:"varint,2,opt,name=type,proto3,enum=shikanime.elkia.eventing.v1alpha1.RequestType" json:"type,omitempty"`
}

func (x *CharacterRequestRequest) Reset() {
	*x = CharacterRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterRequestRequest) ProtoMessage() {}

func (x *CharacterRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterRequestRequest.ProtoReflect.Descriptor instead.
func (*CharacterRequestRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{16}
}

func (x *CharacterRequestRequest) GetCharacterId() uint32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *CharacterRequestRequest) GetType() RequestType {
	if x != nil {
		return x.Type
	}
	return RequestType_REQUESTED
}

type GlobalOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Option CharacterOptions `protobuf:"varint,1,opt,name=option,proto3,enum=shikanime.elkia.eventing.v1alpha1.CharacterOptions" json:"option,omitempty"`
}

func (x *GlobalOptions) Reset() {
	*x = GlobalOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalOptions) ProtoMessage() {}

func (x *GlobalOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalOptions.ProtoReflect.Descriptor instead.
func (*GlobalOptions) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{17}
}

func (x *GlobalOptions) GetOption() CharacterOptions {
	if x != nil {
		return x.Option
	}
	return CharacterOptions_EXCHANGE_BLOCKED
}

type CoreInteractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Types that are assignable to Request:
	//
	//	*CoreInteractRequest_Raw
	//	*CoreInteractRequest_Heartbeat
	Request isCoreInteractRequest_Request `protobuf_oneof:"request"`
}

func (x *CoreInteractRequest) Reset() {
	*x = CoreInteractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreInteractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreInteractRequest) ProtoMessage() {}

func (x *CoreInteractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreInteractRequest.ProtoReflect.Descriptor instead.
func (*CoreInteractRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{18}
}

func (x *CoreInteractRequest) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (m *CoreInteractRequest) GetRequest() isCoreInteractRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *CoreInteractRequest) GetRaw() []byte {
	if x, ok := x.GetRequest().(*CoreInteractRequest_Raw); ok {
		return x.Raw
	}
	return nil
}

func (x *CoreInteractRequest) GetHeartbeat() *HeartbeatRequest {
	if x, ok := x.GetRequest().(*CoreInteractRequest_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isCoreInteractRequest_Request interface {
	isCoreInteractRequest_Request()
}

type CoreInteractRequest_Raw struct {
	Raw []byte `protobuf:"bytes,2,opt,name=raw,proto3,oneof"`
}

type CoreInteractRequest_Heartbeat struct {
	Heartbeat *HeartbeatRequest `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof"`
}

func (*CoreInteractRequest_Raw) isCoreInteractRequest_Request() {}

func (*CoreInteractRequest_Heartbeat) isCoreInteractRequest_Request() {}

type ClientInteractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Types that are assignable to Request:
	//
	//	*ClientInteractRequest_FStashEnd
	//	*ClientInteractRequest_CClose
	//	*ClientInteractRequest_Lbs
	//	*ClientInteractRequest_MultiTargetList
	//	*ClientInteractRequest_CharacterRequest
	//	*ClientInteractRequest_GlobalOptions
	Request isClientInteractRequest_Request `protobuf_oneof:"request"`
}

func (x *ClientInteractRequest) Reset() {
	*x = ClientInteractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInteractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInteractRequest) ProtoMessage() {}

func (x *ClientInteractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInteractRequest.ProtoReflect.Descriptor instead.
func (*ClientInteractRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{19}
}

func (x *ClientInteractRequest) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (m *ClientInteractRequest) GetRequest() isClientInteractRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ClientInteractRequest) GetFStashEnd() *FStashEndRequest {
	if x, ok := x.GetRequest().(*ClientInteractRequest_FStashEnd); ok {
		return x.FStashEnd
	}
	return nil
}

func (x *ClientInteractRequest) GetCClose() *CCloseRequest {
	if x, ok := x.GetRequest().(*ClientInteractRequest_CClose); ok {
		return x.CClose
	}
	return nil
}

func (x *ClientInteractRequest) GetLbs() *LBSRequest {
	if x, ok := x.GetRequest().(*ClientInteractRequest_Lbs); ok {
		return x.Lbs
	}
	return nil
}

func (x *ClientInteractRequest) GetMultiTargetList() *MultiTargetListRequest {
	if x, ok := x.GetRequest().(*ClientInteractRequest_MultiTargetList); ok {
		return x.MultiTargetList
	}
	return nil
}

func (x *ClientInteractRequest) GetCharacterRequest() *CharacterRequestRequest {
	if x, ok := x.GetRequest().(*ClientInteractRequest_CharacterRequest); ok {
		return x.CharacterRequest
	}
	return nil
}

func (x *ClientInteractRequest) GetGlobalOptions() *GlobalOptions {
	if x, ok := x.GetRequest().(*ClientInteractRequest_GlobalOptions); ok {
		return x.GlobalOptions
	}
	return nil
}

type isClientInteractRequest_Request interface {
	isClientInteractRequest_Request()
}

type ClientInteractRequest_FStashEnd struct {
	FStashEnd *FStashEndRequest `protobuf:"bytes,2,opt,name=f_stash_end,json=fStashEnd,proto3,oneof"`
}

type ClientInteractRequest_CClose struct {
	CClose *CCloseRequest `protobuf:"bytes,3,opt,name=c_close,json=cClose,proto3,oneof"`
}

type ClientInteractRequest_Lbs struct {
	Lbs *LBSRequest `protobuf:"bytes,4,opt,name=lbs,proto3,oneof"`
}

type ClientInteractRequest_MultiTargetList struct {
	MultiTargetList *MultiTargetListRequest `protobuf:"bytes,5,opt,name=multi_target_list,json=multiTargetList,proto3,oneof"`
}

type ClientInteractRequest_CharacterRequest struct {
	CharacterRequest *CharacterRequestRequest `protobuf:"bytes,6,opt,name=character_request,json=characterRequest,proto3,oneof"`
}

type ClientInteractRequest_GlobalOptions struct {
	GlobalOptions *GlobalOptions `protobuf:"bytes,7,opt,name=global_options,json=globalOptions,proto3,oneof"`
}

func (*ClientInteractRequest_FStashEnd) isClientInteractRequest_Request() {}

func (*ClientInteractRequest_CClose) isClientInteractRequest_Request() {}

func (*ClientInteractRequest_Lbs) isClientInteractRequest_Request() {}

func (*ClientInteractRequest_MultiTargetList) isClientInteractRequest_Request() {}

func (*ClientInteractRequest_CharacterRequest) isClientInteractRequest_Request() {}

func (*ClientInteractRequest_GlobalOptions) isClientInteractRequest_Request() {}

type ChannelInteractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*ChannelInteractRequest_Sync
	//	*ChannelInteractRequest_Identifier
	//	*ChannelInteractRequest_Password
	//	*ChannelInteractRequest_CoreInteract
	//	*ChannelInteractRequest_ClientInteract
	//	*ChannelInteractRequest_LobbyInteract
	Request isChannelInteractRequest_Request `protobuf_oneof:"request"`
}

func (x *ChannelInteractRequest) Reset() {
	*x = ChannelInteractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInteractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInteractRequest) ProtoMessage() {}

func (x *ChannelInteractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInteractRequest.ProtoReflect.Descriptor instead.
func (*ChannelInteractRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{20}
}

func (m *ChannelInteractRequest) GetRequest() isChannelInteractRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ChannelInteractRequest) GetSync() *SyncRequest {
	if x, ok := x.GetRequest().(*ChannelInteractRequest_Sync); ok {
		return x.Sync
	}
	return nil
}

func (x *ChannelInteractRequest) GetIdentifier() *Identifier {
	if x, ok := x.GetRequest().(*ChannelInteractRequest_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (x *ChannelInteractRequest) GetPassword() *Password {
	if x, ok := x.GetRequest().(*ChannelInteractRequest_Password); ok {
		return x.Password
	}
	return nil
}

func (x *ChannelInteractRequest) GetCoreInteract() *CoreInteractRequest {
	if x, ok := x.GetRequest().(*ChannelInteractRequest_CoreInteract); ok {
		return x.CoreInteract
	}
	return nil
}

func (x *ChannelInteractRequest) GetClientInteract() *ClientInteractRequest {
	if x, ok := x.GetRequest().(*ChannelInteractRequest_ClientInteract); ok {
		return x.ClientInteract
	}
	return nil
}

func (x *ChannelInteractRequest) GetLobbyInteract() *v1alpha1.LobbyInteractRequest {
	if x, ok := x.GetRequest().(*ChannelInteractRequest_LobbyInteract); ok {
		return x.LobbyInteract
	}
	return nil
}

type isChannelInteractRequest_Request interface {
	isChannelInteractRequest_Request()
}

type ChannelInteractRequest_Sync struct {
	Sync *SyncRequest `protobuf:"bytes,1,opt,name=sync,proto3,oneof"`
}

type ChannelInteractRequest_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,2,opt,name=identifier,proto3,oneof"`
}

type ChannelInteractRequest_Password struct {
	Password *Password `protobuf:"bytes,3,opt,name=password,proto3,oneof"`
}

type ChannelInteractRequest_CoreInteract struct {
	CoreInteract *CoreInteractRequest `protobuf:"bytes,4,opt,name=core_interact,json=coreInteract,proto3,oneof"`
}

type ChannelInteractRequest_ClientInteract struct {
	ClientInteract *ClientInteractRequest `protobuf:"bytes,5,opt,name=client_interact,json=clientInteract,proto3,oneof"`
}

type ChannelInteractRequest_LobbyInteract struct {
	LobbyInteract *v1alpha1.LobbyInteractRequest `protobuf:"bytes,6,opt,name=lobby_interact,json=lobbyInteract,proto3,oneof"`
}

func (*ChannelInteractRequest_Sync) isChannelInteractRequest_Request() {}

func (*ChannelInteractRequest_Identifier) isChannelInteractRequest_Request() {}

func (*ChannelInteractRequest_Password) isChannelInteractRequest_Request() {}

func (*ChannelInteractRequest_CoreInteract) isChannelInteractRequest_Request() {}

func (*ChannelInteractRequest_ClientInteract) isChannelInteractRequest_Request() {}

func (*ChannelInteractRequest_LobbyInteract) isChannelInteractRequest_Request() {}

type ChannelInteractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ChannelInteractResponse_Error
	//	*ChannelInteractResponse_Info
	//	*ChannelInteractResponse_LobbyInteract
	Response isChannelInteractResponse_Response `protobuf_oneof:"response"`
}

func (x *ChannelInteractResponse) Reset() {
	*x = ChannelInteractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInteractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInteractResponse) ProtoMessage() {}

func (x *ChannelInteractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInteractResponse.ProtoReflect.Descriptor instead.
func (*ChannelInteractResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP(), []int{21}
}

func (m *ChannelInteractResponse) GetResponse() isChannelInteractResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ChannelInteractResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*ChannelInteractResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ChannelInteractResponse) GetInfo() *Info {
	if x, ok := x.GetResponse().(*ChannelInteractResponse_Info); ok {
		return x.Info
	}
	return nil
}

func (x *ChannelInteractResponse) GetLobbyInteract() *v1alpha1.LobbyInteractResponse {
	if x, ok := x.GetResponse().(*ChannelInteractResponse_LobbyInteract); ok {
		return x.LobbyInteract
	}
	return nil
}

type isChannelInteractResponse_Response interface {
	isChannelInteractResponse_Response()
}

type ChannelInteractResponse_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ChannelInteractResponse_Info struct {
	Info *Info `protobuf:"bytes,2,opt,name=info,proto3,oneof"`
}

type ChannelInteractResponse_LobbyInteract struct {
	LobbyInteract *v1alpha1.LobbyInteractResponse `protobuf:"bytes,3,opt,name=lobby_interact,json=lobbyInteract,proto3,oneof"`
}

func (*ChannelInteractResponse_Error) isChannelInteractResponse_Response() {}

func (*ChannelInteractResponse_Info) isChannelInteractResponse_Response() {}

func (*ChannelInteractResponse_LobbyInteract) isChannelInteractResponse_Response() {}

var File_pkg_api_eventing_v1alpha1_eventing_proto protoreflect.FileDescriptor

var file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x22, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x44, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x22, 0xa3, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67,
	0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x78, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x49, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x8d, 0x02, 0x0a,
	0x14, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x68, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c,
	0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x6c, 0x6f, 0x77,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x0b,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x0a, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a,
	0x10, 0x46, 0x53, 0x74, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x20, 0x0a, 0x0a, 0x4c, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x16,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73,
	0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65,
	0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x06, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x61,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x53,
	0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c,
	0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd4,
	0x04, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x66, 0x5f, 0x73, 0x74, 0x61, 0x73, 0x68, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x53,
	0x74, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x66, 0x53, 0x74, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x63,
	0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x6c, 0x62, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x42, 0x53, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x62, 0x73, 0x12, 0x67, 0x0a, 0x11, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69,
	0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x59, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa8, 0x04, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x4f, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x68, 0x69,
	0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x5d, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x63, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x68, 0x69,
	0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x5d, 0x0a, 0x0e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x86, 0x02, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x68,
	0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73,
	0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x5e, 0x0a,
	0x0e, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xc9, 0x01, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x55, 0x54, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x45, 0x58, 0x50,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e,
	0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x17,
	0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c,
	0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x44, 0x5f, 0x43,
	0x41, 0x53, 0x45, 0x10, 0x08, 0x2a, 0x52, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x2a, 0xb6, 0x02, 0x0a, 0x10, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x1a, 0x0a, 0x16, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x57, 0x48, 0x49, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12,
	0x12, 0x0a, 0x0e, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x41, 0x49, 0x4d, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x54,
	0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4d,
	0x4f, 0x54, 0x49, 0x43, 0x4f, 0x4e, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10,
	0x08, 0x12, 0x10, 0x0a, 0x0c, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x55,
	0x50, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x50, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x55, 0x46, 0x46, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x41, 0x4e,
	0x44, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x0c, 0x32, 0x97, 0x02, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x83, 0x01, 0x0a, 0x0c,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x36, 0x2e, 0x73,
	0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x88, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x39, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b,
	0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x98, 0x01, 0x0a,
	0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x39, 0x2e, 0x73,
	0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e, 0x73, 0x68,
	0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x65,
	0x6c, 0x6b, 0x69, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescOnce sync.Once
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData = file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc
)

func file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescGZIP() []byte {
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescOnce.Do(func() {
		file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData)
	})
	return file_pkg_api_eventing_v1alpha1_eventing_proto_rawDescData
}

var file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_pkg_api_eventing_v1alpha1_eventing_proto_goTypes = []interface{}{
	(Code)(0),                              // 0: shikanime.elkia.eventing.v1alpha1.Code
	(RequestType)(0),                       // 1: shikanime.elkia.eventing.v1alpha1.RequestType
	(CharacterOptions)(0),                  // 2: shikanime.elkia.eventing.v1alpha1.CharacterOptions
	(*Error)(nil),                          // 3: shikanime.elkia.eventing.v1alpha1.Error
	(*Info)(nil),                           // 4: shikanime.elkia.eventing.v1alpha1.Info
	(*CreateLoginFlowRequest)(nil),         // 5: shikanime.elkia.eventing.v1alpha1.CreateLoginFlowRequest
	(*Endpoint)(nil),                       // 6: shikanime.elkia.eventing.v1alpha1.Endpoint
	(*AuthInteractRequest)(nil),            // 7: shikanime.elkia.eventing.v1alpha1.AuthInteractRequest
	(*CreateLoginFlowResponse)(nil),        // 8: shikanime.elkia.eventing.v1alpha1.CreateLoginFlowResponse
	(*AuthInteractResponse)(nil),           // 9: shikanime.elkia.eventing.v1alpha1.AuthInteractResponse
	(*SyncRequest)(nil),                    // 10: shikanime.elkia.eventing.v1alpha1.SyncRequest
	(*Identifier)(nil),                     // 11: shikanime.elkia.eventing.v1alpha1.Identifier
	(*Password)(nil),                       // 12: shikanime.elkia.eventing.v1alpha1.Password
	(*HeartbeatRequest)(nil),               // 13: shikanime.elkia.eventing.v1alpha1.HeartbeatRequest
	(*FStashEndRequest)(nil),               // 14: shikanime.elkia.eventing.v1alpha1.FStashEndRequest
	(*CCloseRequest)(nil),                  // 15: shikanime.elkia.eventing.v1alpha1.CCloseRequest
	(*LBSRequest)(nil),                     // 16: shikanime.elkia.eventing.v1alpha1.LBSRequest
	(*MultiTarget)(nil),                    // 17: shikanime.elkia.eventing.v1alpha1.MultiTarget
	(*MultiTargetListRequest)(nil),         // 18: shikanime.elkia.eventing.v1alpha1.MultiTargetListRequest
	(*CharacterRequestRequest)(nil),        // 19: shikanime.elkia.eventing.v1alpha1.CharacterRequestRequest
	(*GlobalOptions)(nil),                  // 20: shikanime.elkia.eventing.v1alpha1.GlobalOptions
	(*CoreInteractRequest)(nil),            // 21: shikanime.elkia.eventing.v1alpha1.CoreInteractRequest
	(*ClientInteractRequest)(nil),          // 22: shikanime.elkia.eventing.v1alpha1.ClientInteractRequest
	(*ChannelInteractRequest)(nil),         // 23: shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest
	(*ChannelInteractResponse)(nil),        // 24: shikanime.elkia.eventing.v1alpha1.ChannelInteractResponse
	(*v1alpha1.LobbyInteractRequest)(nil),  // 25: shikanime.elkia.world.v1alpha1.LobbyInteractRequest
	(*v1alpha1.LobbyInteractResponse)(nil), // 26: shikanime.elkia.world.v1alpha1.LobbyInteractResponse
}
var file_pkg_api_eventing_v1alpha1_eventing_proto_depIdxs = []int32{
	0,  // 0: shikanime.elkia.eventing.v1alpha1.Error.code:type_name -> shikanime.elkia.eventing.v1alpha1.Code
	5,  // 1: shikanime.elkia.eventing.v1alpha1.AuthInteractRequest.create_login_flow:type_name -> shikanime.elkia.eventing.v1alpha1.CreateLoginFlowRequest
	6,  // 2: shikanime.elkia.eventing.v1alpha1.CreateLoginFlowResponse.endpoints:type_name -> shikanime.elkia.eventing.v1alpha1.Endpoint
	3,  // 3: shikanime.elkia.eventing.v1alpha1.AuthInteractResponse.error:type_name -> shikanime.elkia.eventing.v1alpha1.Error
	4,  // 4: shikanime.elkia.eventing.v1alpha1.AuthInteractResponse.info:type_name -> shikanime.elkia.eventing.v1alpha1.Info
	8,  // 5: shikanime.elkia.eventing.v1alpha1.AuthInteractResponse.create_login_flow:type_name -> shikanime.elkia.eventing.v1alpha1.CreateLoginFlowResponse
	17, // 6: shikanime.elkia.eventing.v1alpha1.MultiTargetListRequest.targets:type_name -> shikanime.elkia.eventing.v1alpha1.MultiTarget
	1,  // 7: shikanime.elkia.eventing.v1alpha1.CharacterRequestRequest.type:type_name -> shikanime.elkia.eventing.v1alpha1.RequestType
	2,  // 8: shikanime.elkia.eventing.v1alpha1.GlobalOptions.option:type_name -> shikanime.elkia.eventing.v1alpha1.CharacterOptions
	13, // 9: shikanime.elkia.eventing.v1alpha1.CoreInteractRequest.heartbeat:type_name -> shikanime.elkia.eventing.v1alpha1.HeartbeatRequest
	14, // 10: shikanime.elkia.eventing.v1alpha1.ClientInteractRequest.f_stash_end:type_name -> shikanime.elkia.eventing.v1alpha1.FStashEndRequest
	15, // 11: shikanime.elkia.eventing.v1alpha1.ClientInteractRequest.c_close:type_name -> shikanime.elkia.eventing.v1alpha1.CCloseRequest
	16, // 12: shikanime.elkia.eventing.v1alpha1.ClientInteractRequest.lbs:type_name -> shikanime.elkia.eventing.v1alpha1.LBSRequest
	18, // 13: shikanime.elkia.eventing.v1alpha1.ClientInteractRequest.multi_target_list:type_name -> shikanime.elkia.eventing.v1alpha1.MultiTargetListRequest
	19, // 14: shikanime.elkia.eventing.v1alpha1.ClientInteractRequest.character_request:type_name -> shikanime.elkia.eventing.v1alpha1.CharacterRequestRequest
	20, // 15: shikanime.elkia.eventing.v1alpha1.ClientInteractRequest.global_options:type_name -> shikanime.elkia.eventing.v1alpha1.GlobalOptions
	10, // 16: shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest.sync:type_name -> shikanime.elkia.eventing.v1alpha1.SyncRequest
	11, // 17: shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest.identifier:type_name -> shikanime.elkia.eventing.v1alpha1.Identifier
	12, // 18: shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest.password:type_name -> shikanime.elkia.eventing.v1alpha1.Password
	21, // 19: shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest.core_interact:type_name -> shikanime.elkia.eventing.v1alpha1.CoreInteractRequest
	22, // 20: shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest.client_interact:type_name -> shikanime.elkia.eventing.v1alpha1.ClientInteractRequest
	25, // 21: shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest.lobby_interact:type_name -> shikanime.elkia.world.v1alpha1.LobbyInteractRequest
	3,  // 22: shikanime.elkia.eventing.v1alpha1.ChannelInteractResponse.error:type_name -> shikanime.elkia.eventing.v1alpha1.Error
	4,  // 23: shikanime.elkia.eventing.v1alpha1.ChannelInteractResponse.info:type_name -> shikanime.elkia.eventing.v1alpha1.Info
	26, // 24: shikanime.elkia.eventing.v1alpha1.ChannelInteractResponse.lobby_interact:type_name -> shikanime.elkia.world.v1alpha1.LobbyInteractResponse
	7,  // 25: shikanime.elkia.eventing.v1alpha1.Auth.AuthInteract:input_type -> shikanime.elkia.eventing.v1alpha1.AuthInteractRequest
	5,  // 26: shikanime.elkia.eventing.v1alpha1.Auth.CreateLoginFlow:input_type -> shikanime.elkia.eventing.v1alpha1.CreateLoginFlowRequest
	23, // 27: shikanime.elkia.eventing.v1alpha1.Gateway.ChannelInteract:input_type -> shikanime.elkia.eventing.v1alpha1.ChannelInteractRequest
	9,  // 28: shikanime.elkia.eventing.v1alpha1.Auth.AuthInteract:output_type -> shikanime.elkia.eventing.v1alpha1.AuthInteractResponse
	8,  // 29: shikanime.elkia.eventing.v1alpha1.Auth.CreateLoginFlow:output_type -> shikanime.elkia.eventing.v1alpha1.CreateLoginFlowResponse
	24, // 30: shikanime.elkia.eventing.v1alpha1.Gateway.ChannelInteract:output_type -> shikanime.elkia.eventing.v1alpha1.ChannelInteractResponse
	28, // [28:31] is the sub-list for method output_type
	25, // [25:28] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_pkg_api_eventing_v1alpha1_eventing_proto_init() }
func file_pkg_api_eventing_v1alpha1_eventing_proto_init() {
	if File_pkg_api_eventing_v1alpha1_eventing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoginFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthInteractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoginFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthInteractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Password); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FStashEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LBSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiTargetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreInteractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInteractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInteractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInteractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AuthInteractRequest_CreateLoginFlow)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*AuthInteractResponse_Error)(nil),
		(*AuthInteractResponse_Info)(nil),
		(*AuthInteractResponse_CreateLoginFlow)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*CoreInteractRequest_Raw)(nil),
		(*CoreInteractRequest_Heartbeat)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*ClientInteractRequest_FStashEnd)(nil),
		(*ClientInteractRequest_CClose)(nil),
		(*ClientInteractRequest_Lbs)(nil),
		(*ClientInteractRequest_MultiTargetList)(nil),
		(*ClientInteractRequest_CharacterRequest)(nil),
		(*ClientInteractRequest_GlobalOptions)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ChannelInteractRequest_Sync)(nil),
		(*ChannelInteractRequest_Identifier)(nil),
		(*ChannelInteractRequest_Password)(nil),
		(*ChannelInteractRequest_CoreInteract)(nil),
		(*ChannelInteractRequest_ClientInteract)(nil),
		(*ChannelInteractRequest_LobbyInteract)(nil),
	}
	file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*ChannelInteractResponse_Error)(nil),
		(*ChannelInteractResponse_Info)(nil),
		(*ChannelInteractResponse_LobbyInteract)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_api_eventing_v1alpha1_eventing_proto_goTypes,
		DependencyIndexes: file_pkg_api_eventing_v1alpha1_eventing_proto_depIdxs,
		EnumInfos:         file_pkg_api_eventing_v1alpha1_eventing_proto_enumTypes,
		MessageInfos:      file_pkg_api_eventing_v1alpha1_eventing_proto_msgTypes,
	}.Build()
	File_pkg_api_eventing_v1alpha1_eventing_proto = out.File
	file_pkg_api_eventing_v1alpha1_eventing_proto_rawDesc = nil
	file_pkg_api_eventing_v1alpha1_eventing_proto_goTypes = nil
	file_pkg_api_eventing_v1alpha1_eventing_proto_depIdxs = nil
}
