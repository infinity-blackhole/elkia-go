// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.12
// source: pkg/api/eventing/v1alpha1/client.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CharacterOptions int32

const (
	CharacterOptions_EXCHANGE_BLOCKED        CharacterOptions = 0
	CharacterOptions_FRIEND_REQUEST_BLOCKED  CharacterOptions = 1
	CharacterOptions_FAMILY_REQUEST_BLOCKED  CharacterOptions = 2
	CharacterOptions_WHISPER_BLOCKED         CharacterOptions = 3
	CharacterOptions_GROUP_REQUEST_BLOCKED   CharacterOptions = 4
	CharacterOptions_GROUP_SHARING           CharacterOptions = 5
	CharacterOptions_MOUSE_AIM_LOCK          CharacterOptions = 6
	CharacterOptions_HERO_CHAT_BLOCKED       CharacterOptions = 7
	CharacterOptions_EMOTICONS_BLOCKED       CharacterOptions = 8
	CharacterOptions_QUICK_GET_UP            CharacterOptions = 9
	CharacterOptions_HP_BLOCKED              CharacterOptions = 10
	CharacterOptions_BUFF_BLOCKED            CharacterOptions = 11
	CharacterOptions_MINILAND_INVITE_BLOCKED CharacterOptions = 12
)

// Enum value maps for CharacterOptions.
var (
	CharacterOptions_name = map[int32]string{
		0:  "EXCHANGE_BLOCKED",
		1:  "FRIEND_REQUEST_BLOCKED",
		2:  "FAMILY_REQUEST_BLOCKED",
		3:  "WHISPER_BLOCKED",
		4:  "GROUP_REQUEST_BLOCKED",
		5:  "GROUP_SHARING",
		6:  "MOUSE_AIM_LOCK",
		7:  "HERO_CHAT_BLOCKED",
		8:  "EMOTICONS_BLOCKED",
		9:  "QUICK_GET_UP",
		10: "HP_BLOCKED",
		11: "BUFF_BLOCKED",
		12: "MINILAND_INVITE_BLOCKED",
	}
	CharacterOptions_value = map[string]int32{
		"EXCHANGE_BLOCKED":        0,
		"FRIEND_REQUEST_BLOCKED":  1,
		"FAMILY_REQUEST_BLOCKED":  2,
		"WHISPER_BLOCKED":         3,
		"GROUP_REQUEST_BLOCKED":   4,
		"GROUP_SHARING":           5,
		"MOUSE_AIM_LOCK":          6,
		"HERO_CHAT_BLOCKED":       7,
		"EMOTICONS_BLOCKED":       8,
		"QUICK_GET_UP":            9,
		"HP_BLOCKED":              10,
		"BUFF_BLOCKED":            11,
		"MINILAND_INVITE_BLOCKED": 12,
	}
)

func (x CharacterOptions) Enum() *CharacterOptions {
	p := new(CharacterOptions)
	*p = x
	return p
}

func (x CharacterOptions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterOptions) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_eventing_v1alpha1_client_proto_enumTypes[0].Descriptor()
}

func (CharacterOptions) Type() protoreflect.EnumType {
	return &file_pkg_api_eventing_v1alpha1_client_proto_enumTypes[0]
}

func (x CharacterOptions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterOptions.Descriptor instead.
func (CharacterOptions) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{0}
}

type Code int32

const (
	Code_OUTDATED_CLIENT      Code = 0
	Code_UNEXPECTED_ERROR     Code = 1
	Code_MAINTENANCE          Code = 2
	Code_SESSION_ALREADY_USED Code = 3
	Code_UNVALID_CREDENTIALS  Code = 4
	Code_CANT_AUTHENTICATE    Code = 5
	Code_USER_BLOCKLISTED     Code = 6
	Code_COUNTRY_BLACKLISTED  Code = 7
	Code_BAD_CASE             Code = 8
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "OUTDATED_CLIENT",
		1: "UNEXPECTED_ERROR",
		2: "MAINTENANCE",
		3: "SESSION_ALREADY_USED",
		4: "UNVALID_CREDENTIALS",
		5: "CANT_AUTHENTICATE",
		6: "USER_BLOCKLISTED",
		7: "COUNTRY_BLACKLISTED",
		8: "BAD_CASE",
	}
	Code_value = map[string]int32{
		"OUTDATED_CLIENT":      0,
		"UNEXPECTED_ERROR":     1,
		"MAINTENANCE":          2,
		"SESSION_ALREADY_USED": 3,
		"UNVALID_CREDENTIALS":  4,
		"CANT_AUTHENTICATE":    5,
		"USER_BLOCKLISTED":     6,
		"COUNTRY_BLACKLISTED":  7,
		"BAD_CASE":             8,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_eventing_v1alpha1_client_proto_enumTypes[1].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_pkg_api_eventing_v1alpha1_client_proto_enumTypes[1]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{1}
}

type HeartbeatCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatCommand) Reset() {
	*x = HeartbeatCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatCommand) ProtoMessage() {}

func (x *HeartbeatCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatCommand.ProtoReflect.Descriptor instead.
func (*HeartbeatCommand) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{0}
}

// TODO: unidentified f_stash_end frame
type FStashEndCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FStashEndCommand) Reset() {
	*x = FStashEndCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FStashEndCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FStashEndCommand) ProtoMessage() {}

func (x *FStashEndCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FStashEndCommand.ProtoReflect.Descriptor instead.
func (*FStashEndCommand) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{1}
}

// TODO: unidentified c_close frame
type CCloseCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CCloseCommand) Reset() {
	*x = CCloseCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCloseCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCloseCommand) ProtoMessage() {}

func (x *CCloseCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCloseCommand.ProtoReflect.Descriptor instead.
func (*CCloseCommand) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{2}
}

// TODO: unidentified lbs frame
type LBSCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LBSCommand) Reset() {
	*x = LBSCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LBSCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LBSCommand) ProtoMessage() {}

func (x *LBSCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LBSCommand.ProtoReflect.Descriptor instead.
func (*LBSCommand) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{3}
}

func (x *LBSCommand) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GlobalOptionsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Option CharacterOptions `protobuf:"varint,1,opt,name=option,proto3,enum=shikanime.elkia.eventing.v1alpha1.CharacterOptions" json:"option,omitempty"`
}

func (x *GlobalOptionsCommand) Reset() {
	*x = GlobalOptionsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalOptionsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalOptionsCommand) ProtoMessage() {}

func (x *GlobalOptionsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalOptionsCommand.ProtoReflect.Descriptor instead.
func (*GlobalOptionsCommand) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{4}
}

func (x *GlobalOptionsCommand) GetOption() CharacterOptions {
	if x != nil {
		return x.Option
	}
	return CharacterOptions_EXCHANGE_BLOCKED
}

type ClientCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Types that are assignable to Command:
	//
	//	*ClientCommand_Heartbeat
	//	*ClientCommand_FStashEnd
	//	*ClientCommand_CClose
	//	*ClientCommand_Lbs
	//	*ClientCommand_GlobalOptions
	Command isClientCommand_Command `protobuf_oneof:"command"`
}

func (x *ClientCommand) Reset() {
	*x = ClientCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCommand) ProtoMessage() {}

func (x *ClientCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCommand.ProtoReflect.Descriptor instead.
func (*ClientCommand) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{5}
}

func (x *ClientCommand) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (m *ClientCommand) GetCommand() isClientCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *ClientCommand) GetHeartbeat() *HeartbeatCommand {
	if x, ok := x.GetCommand().(*ClientCommand_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *ClientCommand) GetFStashEnd() *FStashEndCommand {
	if x, ok := x.GetCommand().(*ClientCommand_FStashEnd); ok {
		return x.FStashEnd
	}
	return nil
}

func (x *ClientCommand) GetCClose() *CCloseCommand {
	if x, ok := x.GetCommand().(*ClientCommand_CClose); ok {
		return x.CClose
	}
	return nil
}

func (x *ClientCommand) GetLbs() *LBSCommand {
	if x, ok := x.GetCommand().(*ClientCommand_Lbs); ok {
		return x.Lbs
	}
	return nil
}

func (x *ClientCommand) GetGlobalOptions() *GlobalOptionsCommand {
	if x, ok := x.GetCommand().(*ClientCommand_GlobalOptions); ok {
		return x.GlobalOptions
	}
	return nil
}

type isClientCommand_Command interface {
	isClientCommand_Command()
}

type ClientCommand_Heartbeat struct {
	Heartbeat *HeartbeatCommand `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

type ClientCommand_FStashEnd struct {
	FStashEnd *FStashEndCommand `protobuf:"bytes,3,opt,name=f_stash_end,json=fStashEnd,proto3,oneof"`
}

type ClientCommand_CClose struct {
	CClose *CCloseCommand `protobuf:"bytes,4,opt,name=c_close,json=cClose,proto3,oneof"`
}

type ClientCommand_Lbs struct {
	Lbs *LBSCommand `protobuf:"bytes,5,opt,name=lbs,proto3,oneof"`
}

type ClientCommand_GlobalOptions struct {
	GlobalOptions *GlobalOptionsCommand `protobuf:"bytes,6,opt,name=global_options,json=globalOptions,proto3,oneof"`
}

func (*ClientCommand_Heartbeat) isClientCommand_Command() {}

func (*ClientCommand_FStashEnd) isClientCommand_Command() {}

func (*ClientCommand_CClose) isClientCommand_Command() {}

func (*ClientCommand_Lbs) isClientCommand_Command() {}

func (*ClientCommand_GlobalOptions) isClientCommand_Command() {}

type ErrorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=shikanime.elkia.eventing.v1alpha1.Code" json:"code,omitempty"`
}

func (x *ErrorEvent) Reset() {
	*x = ErrorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorEvent) ProtoMessage() {}

func (x *ErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorEvent.ProtoReflect.Descriptor instead.
func (*ErrorEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorEvent) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OUTDATED_CLIENT
}

type InfoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *InfoEvent) Reset() {
	*x = InfoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoEvent) ProtoMessage() {}

func (x *InfoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoEvent.ProtoReflect.Descriptor instead.
func (*InfoEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{7}
}

func (x *InfoEvent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ClientEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*ClientEvent_Error
	//	*ClientEvent_Info
	Event isClientEvent_Event `protobuf_oneof:"event"`
}

func (x *ClientEvent) Reset() {
	*x = ClientEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEvent) ProtoMessage() {}

func (x *ClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEvent.ProtoReflect.Descriptor instead.
func (*ClientEvent) Descriptor() ([]byte, []int) {
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP(), []int{8}
}

func (m *ClientEvent) GetEvent() isClientEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *ClientEvent) GetError() *ErrorEvent {
	if x, ok := x.GetEvent().(*ClientEvent_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ClientEvent) GetInfo() *InfoEvent {
	if x, ok := x.GetEvent().(*ClientEvent_Info); ok {
		return x.Info
	}
	return nil
}

type isClientEvent_Event interface {
	isClientEvent_Event()
}

type ClientEvent_Error struct {
	Error *ErrorEvent `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ClientEvent_Info struct {
	Info *InfoEvent `protobuf:"bytes,2,opt,name=info,proto3,oneof"`
}

func (*ClientEvent_Error) isClientEvent_Event() {}

func (*ClientEvent_Info) isClientEvent_Event() {}

var File_pkg_api_eventing_v1alpha1_client_proto protoreflect.FileDescriptor

var file_pkg_api_eventing_v1alpha1_client_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x12, 0x0a, 0x10, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22,
	0x12, 0x0a, 0x10, 0x46, 0x53, 0x74, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x22, 0x20, 0x0a, 0x0a, 0x4c, 0x42, 0x53, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x14, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x4b,
	0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33,
	0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x03, 0x0a, 0x0d,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73,
	0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x55,
	0x0a, 0x0b, 0x66, 0x5f, 0x73, 0x74, 0x61, 0x73, 0x68, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e,
	0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x53, 0x74, 0x61, 0x73, 0x68, 0x45, 0x6e,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x09, 0x66, 0x53, 0x74, 0x61,
	0x73, 0x68, 0x45, 0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x63, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x06, 0x63, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x6c, 0x62, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69,
	0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4c, 0x42, 0x53, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x03, 0x6c, 0x62, 0x73, 0x12, 0x60, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0x49, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x3b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x25, 0x0a,
	0x09, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e,
	0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x68, 0x69, 0x6b,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0xb6, 0x02, 0x0a, 0x10, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x57,
	0x48, 0x49, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x41, 0x49, 0x4d, 0x5f, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4d, 0x4f,
	0x54, 0x49, 0x43, 0x4f, 0x4e, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x08,
	0x12, 0x10, 0x0a, 0x0c, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x50,
	0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x50, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x55, 0x46, 0x46, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x41, 0x4e, 0x44,
	0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10,
	0x0c, 0x2a, 0xc9, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x55,
	0x54, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e,
	0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x4e,
	0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x05,
	0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x4c, 0x49,
	0x53, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12,
	0x0c, 0x0a, 0x08, 0x42, 0x41, 0x44, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x08, 0x32, 0x80, 0x01,
	0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x76, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x30, 0x2e, 0x73, 0x68, 0x69,
	0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x2e, 0x2e, 0x73,
	0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e, 0x73, 0x68, 0x69, 0x6b, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x65, 0x6c, 0x6b, 0x69, 0x61, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_eventing_v1alpha1_client_proto_rawDescOnce sync.Once
	file_pkg_api_eventing_v1alpha1_client_proto_rawDescData = file_pkg_api_eventing_v1alpha1_client_proto_rawDesc
)

func file_pkg_api_eventing_v1alpha1_client_proto_rawDescGZIP() []byte {
	file_pkg_api_eventing_v1alpha1_client_proto_rawDescOnce.Do(func() {
		file_pkg_api_eventing_v1alpha1_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_eventing_v1alpha1_client_proto_rawDescData)
	})
	return file_pkg_api_eventing_v1alpha1_client_proto_rawDescData
}

var file_pkg_api_eventing_v1alpha1_client_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_api_eventing_v1alpha1_client_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_api_eventing_v1alpha1_client_proto_goTypes = []interface{}{
	(CharacterOptions)(0),        // 0: shikanime.elkia.eventing.v1alpha1.CharacterOptions
	(Code)(0),                    // 1: shikanime.elkia.eventing.v1alpha1.Code
	(*HeartbeatCommand)(nil),     // 2: shikanime.elkia.eventing.v1alpha1.HeartbeatCommand
	(*FStashEndCommand)(nil),     // 3: shikanime.elkia.eventing.v1alpha1.FStashEndCommand
	(*CCloseCommand)(nil),        // 4: shikanime.elkia.eventing.v1alpha1.CCloseCommand
	(*LBSCommand)(nil),           // 5: shikanime.elkia.eventing.v1alpha1.LBSCommand
	(*GlobalOptionsCommand)(nil), // 6: shikanime.elkia.eventing.v1alpha1.GlobalOptionsCommand
	(*ClientCommand)(nil),        // 7: shikanime.elkia.eventing.v1alpha1.ClientCommand
	(*ErrorEvent)(nil),           // 8: shikanime.elkia.eventing.v1alpha1.ErrorEvent
	(*InfoEvent)(nil),            // 9: shikanime.elkia.eventing.v1alpha1.InfoEvent
	(*ClientEvent)(nil),          // 10: shikanime.elkia.eventing.v1alpha1.ClientEvent
}
var file_pkg_api_eventing_v1alpha1_client_proto_depIdxs = []int32{
	0,  // 0: shikanime.elkia.eventing.v1alpha1.GlobalOptionsCommand.option:type_name -> shikanime.elkia.eventing.v1alpha1.CharacterOptions
	2,  // 1: shikanime.elkia.eventing.v1alpha1.ClientCommand.heartbeat:type_name -> shikanime.elkia.eventing.v1alpha1.HeartbeatCommand
	3,  // 2: shikanime.elkia.eventing.v1alpha1.ClientCommand.f_stash_end:type_name -> shikanime.elkia.eventing.v1alpha1.FStashEndCommand
	4,  // 3: shikanime.elkia.eventing.v1alpha1.ClientCommand.c_close:type_name -> shikanime.elkia.eventing.v1alpha1.CCloseCommand
	5,  // 4: shikanime.elkia.eventing.v1alpha1.ClientCommand.lbs:type_name -> shikanime.elkia.eventing.v1alpha1.LBSCommand
	6,  // 5: shikanime.elkia.eventing.v1alpha1.ClientCommand.global_options:type_name -> shikanime.elkia.eventing.v1alpha1.GlobalOptionsCommand
	1,  // 6: shikanime.elkia.eventing.v1alpha1.ErrorEvent.code:type_name -> shikanime.elkia.eventing.v1alpha1.Code
	8,  // 7: shikanime.elkia.eventing.v1alpha1.ClientEvent.error:type_name -> shikanime.elkia.eventing.v1alpha1.ErrorEvent
	9,  // 8: shikanime.elkia.eventing.v1alpha1.ClientEvent.info:type_name -> shikanime.elkia.eventing.v1alpha1.InfoEvent
	7,  // 9: shikanime.elkia.eventing.v1alpha1.Client.ClientInteract:input_type -> shikanime.elkia.eventing.v1alpha1.ClientCommand
	10, // 10: shikanime.elkia.eventing.v1alpha1.Client.ClientInteract:output_type -> shikanime.elkia.eventing.v1alpha1.ClientEvent
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pkg_api_eventing_v1alpha1_client_proto_init() }
func file_pkg_api_eventing_v1alpha1_client_proto_init() {
	if File_pkg_api_eventing_v1alpha1_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FStashEndCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCloseCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LBSCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalOptionsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ClientCommand_Heartbeat)(nil),
		(*ClientCommand_FStashEnd)(nil),
		(*ClientCommand_CClose)(nil),
		(*ClientCommand_Lbs)(nil),
		(*ClientCommand_GlobalOptions)(nil),
	}
	file_pkg_api_eventing_v1alpha1_client_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ClientEvent_Error)(nil),
		(*ClientEvent_Info)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_eventing_v1alpha1_client_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_eventing_v1alpha1_client_proto_goTypes,
		DependencyIndexes: file_pkg_api_eventing_v1alpha1_client_proto_depIdxs,
		EnumInfos:         file_pkg_api_eventing_v1alpha1_client_proto_enumTypes,
		MessageInfos:      file_pkg_api_eventing_v1alpha1_client_proto_msgTypes,
	}.Build()
	File_pkg_api_eventing_v1alpha1_client_proto = out.File
	file_pkg_api_eventing_v1alpha1_client_proto_rawDesc = nil
	file_pkg_api_eventing_v1alpha1_client_proto_goTypes = nil
	file_pkg_api_eventing_v1alpha1_client_proto_depIdxs = nil
}
